{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\search\\\\result.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StarRatings from \"react-star-ratings\";\nimport ToggleFavoriteButton from \"../ToggleFavoriteButton\";\n/*\r\n=======\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n*/\n\n/*Required business data for Result\r\ndata {\r\n  image_url\r\n  name\r\n  rating (1-5)\r\n  phone\r\n    location {\r\n      address1\r\n      state\r\n      zip_code\r\n    }\r\n}\r\n*/\n\nconst Result = ({\n  data,\n  setTentativeSelection,\n  select,\n  className\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isSelected = _useState2[0],\n        setIsSelected = _useState2[1];\n  /*\r\n  const useStyles = makeStyles({\r\n    card: {\r\n      width: \"80%\",\r\n      height: \"30%\",\r\n      margin: 20,\r\n      padding: 20\r\n      // display: 'flex',\r\n      // // alignItems: 'center',\r\n      // // justifyItems: 'center',\r\n      // justifyContent: 'space-between',\r\n      // // alignContent: 'space-between'\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n  */\n\n\n  return React.createElement(\"div\", {\n    onClick: e => {\n      e.preventDefault();\n      setIsSelected(!isSelected);\n      console.log(\"setting selection to \", data);\n      setTentativeSelection({\n        businessId: data.id,\n        businessName: data.name,\n        businessImg: data.image_url,\n        reviewCount: data.review_count,\n        averageRating: data.rating,\n        changeInRating: \"\",\n        //Yelp API doesn't offer this, unless DS can get this somehow, lets just exclude it\n        url: data.url,\n        image_url: data.image_url,\n        city: data.location.city,\n        state: data.location.state,\n        address: data.location.display_address // Added this for the sidebar; don't have a column in DB yet\n\n      }); //select(e);\n    },\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      alignSelf: \"center\",\n      height: \"100%\",\n      width: \"33%\",\n      objectFit: \"cover\"\n    },\n    src: data.image_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"result-text\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyItems: \"space-between\",\n      paddingLeft: \"5%\",\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, data.name), React.createElement(StarRatings, {\n    rating: data.rating,\n    starRatedColor: \"grey\",\n    starDimension: \"20px\",\n    starSpacing: \"1px\",\n    numberOfStars: 5,\n    name: \"rating\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"phoneNumber\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, data.phone), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, data.location.address1), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, data.location.city, \", \", data.location.state, \" \", data.location.zip_code)));\n};\n\nexport default Result;","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/search/result.js"],"names":["React","useState","useEffect","StarRatings","ToggleFavoriteButton","Result","data","setTentativeSelection","select","className","isSelected","setIsSelected","e","preventDefault","console","log","businessId","id","businessName","name","businessImg","image_url","reviewCount","review_count","averageRating","rating","changeInRating","url","city","location","state","address","display_address","alignSelf","height","width","objectFit","display","flexDirection","justifyItems","paddingLeft","cursor","phone","address1","zip_code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport ToggleFavoriteButton from \"../ToggleFavoriteButton\";\r\n\r\n/*\r\n=======\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n*/\r\n/*Required business data for Result\r\ndata {\r\n  image_url\r\n  name\r\n  rating (1-5)\r\n  phone\r\n    location {\r\n      address1\r\n      state\r\n      zip_code\r\n    }\r\n}\r\n*/\r\n\r\nconst Result = ({ data, setTentativeSelection, select, className }) => {\r\n  const [isSelected, setIsSelected] = useState(false);\r\n  /*\r\n  const useStyles = makeStyles({\r\n    card: {\r\n      width: \"80%\",\r\n      height: \"30%\",\r\n      margin: 20,\r\n      padding: 20\r\n      // display: 'flex',\r\n      // // alignItems: 'center',\r\n      // // justifyItems: 'center',\r\n      // justifyContent: 'space-between',\r\n      // // alignContent: 'space-between'\r\n    }\r\n  });\r\n  const classes = useStyles();\r\n*/\r\n  return (\r\n    <div\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        setIsSelected(!isSelected);\r\n        console.log(\"setting selection to \", data);\r\n        setTentativeSelection({\r\n          businessId: data.id,\r\n          businessName: data.name,\r\n          businessImg: data.image_url,\r\n          reviewCount: data.review_count,\r\n          averageRating: data.rating,\r\n          changeInRating: \"\", //Yelp API doesn't offer this, unless DS can get this somehow, lets just exclude it\r\n          url: data.url,\r\n          image_url: data.image_url,\r\n          city: data.location.city,\r\n          state: data.location.state,\r\n          address: data.location.display_address // Added this for the sidebar; don't have a column in DB yet\r\n        });\r\n          //select(e);\r\n      }}\r\n      className={className}\r\n    >\r\n\r\n      <img\r\n        style={{\r\n          alignSelf: \"center\",\r\n          height: \"100%\",\r\n          width: \"33%\",\r\n          objectFit: \"cover\"\r\n        }}\r\n        src={data.image_url}\r\n      />\r\n      <div\r\n        className=\"result-text\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyItems: \"space-between\",\r\n          paddingLeft: \"5%\",\r\n          cursor: \"pointer\"\r\n        }}\r\n      >\r\n        <h2>{data.name}</h2>\r\n        <StarRatings\r\n          rating={data.rating}\r\n          starRatedColor=\"grey\"\r\n          starDimension=\"20px\"\r\n          starSpacing=\"1px\"\r\n          numberOfStars={5}\r\n          name=\"rating\"\r\n          size=\"large\"\r\n        />\r\n        <p className=\"phoneNumber\">{data.phone}</p>\r\n        <p>{data.location.address1}</p>\r\n        <p>\r\n          {data.location.city}, {data.location.state} {data.location.zip_code}\r\n        </p>\r\n        {/* // business: {\r\n//     // for DS API calls\r\n//     businessId: null,\r\n//     // for side bar\r\n//     businessName: null,\r\n//     businessImg: null,\r\n//     // for top-of-page info cards\r\n//     reviewCount: 0,\r\n//     averageRating: 0\r\n//   } */}\r\n\r\n        {/* <ToggleFavoriteButton business={{ businessId: data.id, businessName: data.name, businessImg: data.image_url, reviewCount: data.review_count, averageRating: data.rating }} /> */}\r\n      </div>\r\n      {/* <button style={{marginTop: \"auto\", paddingBottom: \"10%\", paddingRight: \"7.5%\"}}\r\n          onClick={e => {\r\n            console.log(\"On click! setting selected business data as: \", data);\r\n            select(e);\r\n          }}\r\n        >\r\n          Select\r\n        </button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"]},"metadata":{},"sourceType":"module"}