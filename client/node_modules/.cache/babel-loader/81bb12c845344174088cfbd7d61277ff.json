{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\googleAuth\\\\GoogleBtn.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport axios from 'axios';\nconst CLIENT_ID = '608950634863-oocf4589motggau92gukloto2l01fgha.apps.googleusercontent.com';\n\nclass GoogleBtn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogined: false,\n      accessToken: ''\n    };\n    this.login = this.login.bind(this);\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n  }\n\n  login(response) {\n    console.log('Google info: ', response);\n    axios.post('https://accounts.google.com/o/oauth2/v2/auth', response).then(res => {\n      console.log('Successful Login dude!', res);\n      localStorage.setItem(\"token\", res.accessToken);\n      localStorage.setItem(\"userID\", res.googleId);\n    });\n  }\n\n  logout(response) {\n    this.setState(state => ({\n      isLogined: false,\n      accessToken: ''\n    }));\n  }\n\n  handleLoginFailure(response) {\n    alert('Failed to log in');\n  }\n\n  handleLogoutFailure(response) {\n    alert('Failed to log out');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.isLogined ? React.createElement(GoogleLogout, {\n      clientId: CLIENT_ID,\n      buttonText: \"Logout\",\n      onLogoutSuccess: this.logout,\n      onFailure: this.handleLogoutFailure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : React.createElement(GoogleLogin, {\n      clientId: CLIENT_ID,\n      buttonText: \"Sign in with Google\",\n      onSuccess: this.login,\n      onFailure: this.handleLoginFailure,\n      cookiePolicy: 'single_host_origin',\n      responseType: \"code,token\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default GoogleBtn;","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/googleAuth/GoogleBtn.js"],"names":["React","Component","ReactDOM","GoogleLogin","GoogleLogout","axios","CLIENT_ID","GoogleBtn","constructor","props","state","isLogined","accessToken","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","console","log","post","then","res","localStorage","setItem","googleId","setState","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG,0EAAlB;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAC9BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAKA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKG,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDD,EAAAA,KAAK,CAAEK,QAAF,EAAY;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAA7B;AAEAb,IAAAA,KAAK,CACFgB,IADH,CACQ,8CADR,EACwDH,QADxD,EAEGI,IAFH,CAEQC,GAAG,IAAG;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCG,GAAtC;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACX,WAAlC;AACAY,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BF,GAAG,CAACG,QAAnC;AACD,KANH;AAOH;;AAEDV,EAAAA,MAAM,CAAEE,QAAF,EAAY;AAChB,SAAKS,QAAL,CAAcjB,KAAK,KAAK;AACtBC,MAAAA,SAAS,EAAE,KADW;AAEtBC,MAAAA,WAAW,EAAE;AAFS,KAAL,CAAnB;AAID;;AAEDG,EAAAA,kBAAkB,CAAEG,QAAF,EAAY;AAC5BU,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;;AAEDX,EAAAA,mBAAmB,CAAEC,QAAF,EAAY;AAC7BU,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKnB,KAAL,CAAWC,SAAX,GACA,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAGL,SADb;AAEE,MAAA,UAAU,EAAC,QAFb;AAGE,MAAA,eAAe,EAAG,KAAKU,MAHzB;AAIE,MAAA,SAAS,EAAG,KAAKC,mBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAOiB,oBAAC,WAAD;AACf,MAAA,QAAQ,EAAEX,SADK;AAEf,MAAA,UAAU,EAAC,qBAFI;AAGf,MAAA,SAAS,EAAG,KAAKO,KAHF;AAIf,MAAA,SAAS,EAAG,KAAKE,kBAJF;AAKf,MAAA,YAAY,EAAG,oBALA;AAMf,MAAA,YAAY,EAAC,YANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARrB,CADA;AAoBL;;AA/DiC;;AAkElC,eAAeR,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport axios from 'axios';\r\n\r\nconst CLIENT_ID = '608950634863-oocf4589motggau92gukloto2l01fgha.apps.googleusercontent.com';\r\n\r\nclass GoogleBtn extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        isLogined: false,\r\n        accessToken: ''\r\n      };\r\n  \r\n      this.login = this.login.bind(this);\r\n      this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n      this.logout = this.logout.bind(this);\r\n      this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\r\n    }\r\n  \r\n    login (response) {\r\n        console.log('Google info: ', response)\r\n\r\n        axios\r\n          .post('https://accounts.google.com/o/oauth2/v2/auth', response)\r\n          .then(res=> {\r\n            console.log('Successful Login dude!', res);\r\n            localStorage.setItem(\"token\", res.accessToken)\r\n            localStorage.setItem(\"userID\", res.googleId)\r\n          })\r\n    }\r\n  \r\n    logout (response) {\r\n      this.setState(state => ({\r\n        isLogined: false,\r\n        accessToken: ''\r\n      }));\r\n    }\r\n  \r\n    handleLoginFailure (response) {\r\n      alert('Failed to log in')\r\n    }\r\n  \r\n    handleLogoutFailure (response) {\r\n      alert('Failed to log out')\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n      <div>\r\n        { this.state.isLogined ?\r\n          <GoogleLogout\r\n            clientId={ CLIENT_ID }\r\n            buttonText='Logout'\r\n            onLogoutSuccess={ this.logout }\r\n            onFailure={ this.handleLogoutFailure }\r\n          >\r\n          </GoogleLogout>: <GoogleLogin\r\n            clientId={CLIENT_ID}\r\n            buttonText='Sign in with Google'\r\n            onSuccess={ this.login }\r\n            onFailure={ this.handleLoginFailure }\r\n            cookiePolicy={ 'single_host_origin' }\r\n            responseType='code,token'\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default GoogleBtn;"]},"metadata":{},"sourceType":"module"}