{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\dashboard\\\\dashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"./Tabs\";\nimport WidgetDisplayList from \"../WidgetSystem/WidgetDisplayList\";\nimport WidgetAdditionList from \"../WidgetSystem/WidgetAdditionList\";\nimport Sidebar from \"./Sidebar\";\nimport { fetchWordsOverTime, fetchTopAndBottom, fetchAllData } from \"../../actions/index\";\nimport DashboardPlus from \"./dashboardPlus\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n    paddingTop: \"5%\",\n    flexDirection: \"column\"\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction DashboardGrid(props) {\n  const classes = useStyles(); // Fetch data for widgets\n\n  useEffect(() => {\n    console.log(\"Fetching all widget data with ID \", props.id); // Only fetch data if a selected business is in the businesses or competitors array\n    // or if the user is not logged in\n\n    if (businessesContains(props.businessInfo.businessId) || !localStorage.getItem(\"token\")) {\n      props.fetchAllData(props.id);\n    } // props.fetchTopAndBottom(props.id);\n    // props.fetchWordsOverTime(props.id);\n\n  }, [props.businessInfo, props.competitors, props.userBusinesses]);\n  return React.createElement(\"div\", {\n    className: \"dashboardgrid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, localStorage.getItem(\"token\") && localStorage.getItem(\"userID\") ? React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), businessesContains(props.businessInfo.businessId) ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"businessStats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reviews\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.businessInfo.reviewCount), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Total Reviews\")), React.createElement(\"div\", {\n    className: \"ratings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, props.businessInfo.averageRating), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Overall Rating\")), React.createElement(\"div\", {\n    className: \"changeofrating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"11%\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Change in Rating\"))), React.createElement(WidgetDisplayList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })) : React.createElement(DashboardPlus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })) : props.businessInfo.businessId ? //if a business is selected\n  React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, console.log(\"Not Redirecting cause business selected while on dashboard. Business selected:\", props.businessInfo.businessId), React.createElement(\"div\", {\n    className: \"businessStats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"reviews\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, props.businessInfo.reviewCount), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Total Reviews\")), React.createElement(\"div\", {\n    className: \"ratings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, props.businessInfo.averageRating), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Overall Rating\")), React.createElement(\"div\", {\n    className: \"changeofrating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"11%\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontSize: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Change in Rating\"))), React.createElement(WidgetDisplayList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })) : console.log(\"Redirecting cause no business selected while on dashboard. Business selected:\", props.businessInfo.businessId) & props.history.push(\"/\") //FIXME: while deployed, instead of re-routing to just tally-ai.com/ it goes to tally-ai.com/index.html. This causes errors.\n  )); //used to check if this is an actual business or just a new tab\n\n  function businessesContains(businessId) {\n    console.log(\"props.businesses in businessContains: \", props.businesses);\n\n    if (!businessId) {\n      return false;\n    }\n\n    let found = false;\n    props.businesses.forEach(element => {\n      if (element.businessId === businessId) {\n        found = true;\n      }\n    });\n    return found;\n  }\n}\n\nconst mapStateToProps = state => ({\n  // words: state.widgetData.keyWords.data,\n  // isFetching: state.widgetData.keyWords.isFetching,\n  id: state.currentlySelectedBusiness.businessId,\n  businessInfo: state.currentlySelectedBusiness,\n  businesses: state.userBusinesses.businesses.concat(state.competitors.businesses),\n  userBusinesses: state.userBusinesses.businesses,\n  competitors: state.competitors.businesses\n});\n\nexport default connect(mapStateToProps, {\n  fetchWordsOverTime,\n  fetchTopAndBottom,\n  fetchAllData\n})(DashboardGrid);","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/dashboard/dashboard.js"],"names":["React","useEffect","useState","connect","makeStyles","Button","Grid","Paper","Tabs","WidgetDisplayList","WidgetAdditionList","Sidebar","fetchWordsOverTime","fetchTopAndBottom","fetchAllData","DashboardPlus","useStyles","theme","root","flexGrow","display","paddingTop","flexDirection","paper","padding","spacing","textAlign","color","palette","text","secondary","DashboardGrid","props","classes","console","log","id","businessesContains","businessInfo","businessId","localStorage","getItem","competitors","userBusinesses","width","fontWeight","reviewCount","fontSize","averageRating","history","push","businesses","found","forEach","element","mapStateToProps","state","currentlySelectedBusiness","concat"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Tabs from \"./Tabs\";\r\n\r\nimport WidgetDisplayList from \"../WidgetSystem/WidgetDisplayList\";\r\nimport WidgetAdditionList from \"../WidgetSystem/WidgetAdditionList\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nimport {\r\n  fetchWordsOverTime,\r\n  fetchTopAndBottom,\r\n  fetchAllData\r\n} from \"../../actions/index\";\r\nimport DashboardPlus from \"./dashboardPlus\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    paddingTop: \"5%\",\r\n    flexDirection: \"column\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nfunction DashboardGrid(props) {\r\n  const classes = useStyles();\r\n\r\n  // Fetch data for widgets\r\n  useEffect(() => {\r\n    console.log(\"Fetching all widget data with ID \", props.id);\r\n\r\n    // Only fetch data if a selected business is in the businesses or competitors array\r\n    // or if the user is not logged in\r\n    if (\r\n      businessesContains(props.businessInfo.businessId) ||\r\n      !localStorage.getItem(\"token\")\r\n    ) {\r\n      props.fetchAllData(props.id);\r\n    }\r\n\r\n    // props.fetchTopAndBottom(props.id);\r\n    // props.fetchWordsOverTime(props.id);\r\n  }, [props.businessInfo, props.competitors, props.userBusinesses]);\r\n\r\n  return (\r\n    <div className=\"dashboardgrid\">\r\n      <div>\r\n        <Sidebar />\r\n      </div>\r\n      {/* // TODO: DOCUMENT WHAT'S GOING ON HERE */}\r\n      <div style={{ width: \"100%\" }}>\r\n        {localStorage.getItem(\"token\") && localStorage.getItem(\"userID\") ? (\r\n          <div style={{ width: \"100%\" }}>\r\n            <Tabs />\r\n            {businessesContains(props.businessInfo.businessId) ? (\r\n              <div>\r\n                <div className=\"businessStats\">\r\n                  <div className=\"reviews\">\r\n                    <p style={{ fontWeight: \"bold\" }}>\r\n                      {props.businessInfo.reviewCount}\r\n                    </p>\r\n                    <br />\r\n                    <p style={{ fontSize: \"1rem\" }}>Total Reviews</p>\r\n                  </div>\r\n                  <div className=\"ratings\">\r\n                    <p style={{ fontWeight: \"bold\" }}>\r\n                      {props.businessInfo.averageRating}\r\n                    </p>\r\n                    <br />\r\n                    <p style={{ fontSize: \"1rem\" }}>Overall Rating</p>\r\n                  </div>\r\n                  <div className=\"changeofrating\">\r\n                    <p style={{ fontWeight: \"bold\" }}>11%</p>\r\n                    <br />\r\n                    <p style={{ fontSize: \"1rem\" }}>Change in Rating</p>\r\n                  </div>\r\n                </div>\r\n                <WidgetDisplayList />\r\n              </div>\r\n            ) : (\r\n              <DashboardPlus />\r\n            )}\r\n          </div>\r\n        ) : props.businessInfo.businessId ? ( //if a business is selected\r\n          <div>\r\n            {console.log(\r\n              \"Not Redirecting cause business selected while on dashboard. Business selected:\",\r\n              props.businessInfo.businessId\r\n            )}\r\n            <div className=\"businessStats\">\r\n              <div className=\"reviews\">\r\n                <p style={{ fontWeight: \"bold\" }}>\r\n                  {props.businessInfo.reviewCount}\r\n                </p>\r\n                <br />\r\n                <p style={{ fontSize: \"1rem\" }}>Total Reviews</p>\r\n              </div>\r\n              <div className=\"ratings\">\r\n                <p style={{ fontWeight: \"bold\" }}>\r\n                  {props.businessInfo.averageRating}\r\n                </p>\r\n                <br />\r\n                <p style={{ fontSize: \"1rem\" }}>Overall Rating</p>\r\n              </div>\r\n              <div className=\"changeofrating\">\r\n                <p style={{ fontWeight: \"bold\" }}>11%</p>\r\n                <br />\r\n                <p style={{ fontSize: \"1rem\" }}>Change in Rating</p>\r\n              </div>\r\n            </div>\r\n            <WidgetDisplayList />\r\n          </div>\r\n        ) : (\r\n          console.log(\r\n            \"Redirecting cause no business selected while on dashboard. Business selected:\",\r\n            props.businessInfo.businessId\r\n          ) & props.history.push(\"/\") //FIXME: while deployed, instead of re-routing to just tally-ai.com/ it goes to tally-ai.com/index.html. This causes errors.\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  //used to check if this is an actual business or just a new tab\r\n  function businessesContains(businessId) {\r\n    console.log(\"props.businesses in businessContains: \", props.businesses);\r\n\r\n    if (!businessId) {\r\n      return false;\r\n    }\r\n\r\n    let found = false;\r\n    props.businesses.forEach(element => {\r\n      if (element.businessId === businessId) {\r\n        found = true;\r\n      }\r\n    });\r\n    return found;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  // words: state.widgetData.keyWords.data,\r\n  // isFetching: state.widgetData.keyWords.isFetching,\r\n  id: state.currentlySelectedBusiness.businessId,\r\n  businessInfo: state.currentlySelectedBusiness,\r\n  businesses: state.userBusinesses.businesses.concat(\r\n    state.competitors.businesses\r\n  ),\r\n  userBusinesses: state.userBusinesses.businesses,\r\n  competitors: state.competitors.businesses\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchWordsOverTime,\r\n  fetchTopAndBottom,\r\n  fetchAllData\r\n})(DashboardGrid);\r\n"]},"metadata":{},"sourceType":"module"}