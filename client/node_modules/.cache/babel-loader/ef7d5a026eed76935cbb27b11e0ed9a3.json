{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\WidgetSystem\\\\Widgets\\\\RatingOverTime.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ComposedChart, Line, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst exampleData = {\n  star_data: [{\n    date: \"2019-12-07\",\n    cumulative_avg_rating: 4.5,\n    weekly_avg_rating: 3.0\n  }, {\n    date: \"2019-11-23\",\n    cumulative_avg_rating: 4.5,\n    weekly_avg_rating: 5.0\n  }, {\n    date: \"2019-10-19\",\n    cumulative_avg_rating: 4.5,\n    weekly_avg_rating: 5.0\n  }, {\n    date: \"2019-09-14\",\n    cumulative_avg_rating: 4.5,\n    weekly_avg_rating: 5.0\n  }, {\n    date: \"2019-08-17\",\n    cumulative_avg_rating: 4.5,\n    weekly_avg_rating: 3.0\n  }, {\n    date: \"2019-08-03\",\n    cumulative_avg_rating: 4.5,\n    weekly_avg_rating: 5.0\n  }, {\n    date: \"2019-07-13\",\n    cumulative_avg_rating: 4.5,\n    weekly_avg_rating: 5.0\n  }, {\n    date: \"2019-05-25\",\n    cumulative_avg_rating: 4.5,\n    weekly_avg_rating: 5.0\n  }]\n};\n\nconst RatingOverTime = props => {\n  console.log(\"Data in RatingOverTime: \", props.data);\n\n  if (props.isFetching || !props.data) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n  if (props.error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Error!\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"widget\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"widgetTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Star Rating\"), React.createElement(\"p\", {\n    className: \"widgetSubtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Look at how your star rating changes over time compared to the weekly average to identify important time periods.\"), React.createElement(\"div\", {\n    className: \"graphContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ComposedChart, {\n    data: props.data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(XAxis, {\n    dataKey: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    type: \"number\",\n    domain: [0, 5],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(CartesianGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Bar, {\n    dataKey: \"weekly_avg_rating\",\n    barSize: 20,\n    fill: \"#413ea0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"cumulative_avg_rating\",\n    stroke: \"#ff7300\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  data: state.widgetData.ratingOverTime.data,\n  isFetching: state.widgetData.ratingOverTime.isFetching,\n  error: state.widgetData.ratingOverTime.error\n});\n\nexport default connect(mapStateToProps)(RatingOverTime);","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/WidgetSystem/Widgets/RatingOverTime.js"],"names":["React","connect","ComposedChart","Line","Bar","XAxis","YAxis","Tooltip","Legend","CartesianGrid","ResponsiveContainer","CircularProgress","exampleData","star_data","date","cumulative_avg_rating","weekly_avg_rating","RatingOverTime","props","console","log","data","isFetching","error","top","right","left","bottom","mapStateToProps","state","widgetData","ratingOverTime"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  ComposedChart,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  CartesianGrid,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst exampleData = {\r\n  star_data: [\r\n    {date: \"2019-12-07\", cumulative_avg_rating: 4.5, weekly_avg_rating: 3.0}, \r\n    {date: \"2019-11-23\", cumulative_avg_rating: 4.5, weekly_avg_rating: 5.0}, \r\n    {date: \"2019-10-19\", cumulative_avg_rating: 4.5, weekly_avg_rating: 5.0}, \r\n    {date: \"2019-09-14\", cumulative_avg_rating: 4.5, weekly_avg_rating: 5.0}, \r\n    {date: \"2019-08-17\", cumulative_avg_rating: 4.5, weekly_avg_rating: 3.0}, \r\n    {date: \"2019-08-03\", cumulative_avg_rating: 4.5, weekly_avg_rating: 5.0}, \r\n    {date: \"2019-07-13\", cumulative_avg_rating: 4.5, weekly_avg_rating: 5.0}, \r\n    {date: \"2019-05-25\", cumulative_avg_rating: 4.5, weekly_avg_rating: 5.0}\r\n  ]\r\n};\r\n\r\nconst RatingOverTime = props => {\r\n  console.log(\"Data in RatingOverTime: \", props.data);\r\n\r\n  if (props.isFetching || !props.data) {\r\n    return <div><CircularProgress>Loading...</CircularProgress></div>;\r\n  }\r\n  if (props.error) {\r\n    return <div>Error!</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <h3 className=\"widgetTitle\">Star Rating</h3>\r\n      <p className=\"widgetSubtitle\">Look at how your star rating changes over time compared to the weekly average to identify important time periods.</p>\r\n\r\n      <div className=\"graphContainer\">\r\n    <ResponsiveContainer>\r\n        <ComposedChart\r\n          data={props.data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis type=\"number\" domain={[0, 5]}/>\r\n          <CartesianGrid />\r\n          <Tooltip />\r\n          <Legend />\r\n          {/* {exampleData.star_data.map(point => (<Bar dataKey={point.weekly_avg_rating} barSize={20} fill=\"#413ea0\" />))} */}\r\n          <Bar dataKey=\"weekly_avg_rating\" barSize={20} fill=\"#413ea0\" />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"cumulative_avg_rating\"\r\n            stroke=\"#ff7300\"\r\n          />\r\n        </ComposedChart>\r\n        </ResponsiveContainer>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.widgetData.ratingOverTime.data,\r\n  isFetching: state.widgetData.ratingOverTime.isFetching,\r\n  error: state.widgetData.ratingOverTime.error\r\n});\r\n\r\nexport default connect(mapStateToProps)(RatingOverTime);\r\n"]},"metadata":{},"sourceType":"module"}