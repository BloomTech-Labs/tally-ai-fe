{"ast":null,"code":"import _objectSpread from \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/WidgetSystem/Widgets/PositiveWords.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    paddingTop: \"5%\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst TopBottomWords = props => {\n  const classes = useStyles(); // return (\n  //     <React.Fragment>\n  //      <Grid item xs={4} style={{ display: \"flex\", flexDirection: \"column\" }}>\n  //        <Paper className={classes.paper}>item</Paper>\n  //      </Grid>\n  //      <Grid item xs={4} style={{ display: \"flex\", flexDirection: \"column\" }}>\n  //        <Paper className={classes.paper}>item</Paper>\n  //      </Grid>\n  //    </React.Fragment>\n  // );\n\n  let colors = [\"#002487\", \"#002FA0\", \"#003CB8\", \"#004ACC\", \"#0074DF\", \"#068DEE\", \"#15AEF0\", \"#18C1F7\", \"#21D7FF\", \"#29E9FF\"];\n\n  if (props.error) {\n    console.log(\"Error with props:\", props);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Error!\");\n  }\n\n  if (props.isFetching || !props.words) {\n    return React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Loading analytics...\"));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"widget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"widgetTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Your customers are loving...\"), React.createElement(\"p\", {\n      className: \"widgetSubtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"These are the words associated with the reviews with high ratings\"), React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        minHeight: \"300px\",\n        width: \"90%\",\n        borderRadius: \"15px\",\n        margin: \"5%\"\n      },\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, props.words.positive.map((word, index) => {\n      let borderRadius = {\n        borderTopLeftRadius: index === 0 ? \"15px\" : \"0px\",\n        borderTopRightRadius: index === 0 ? \"15px\" : \"0px\",\n        borderBottomLeftRadius: index === props.words.positive.length - 1 ? \"15px\" : \"0px\",\n        borderBottomRightRadius: index === props.words.positive.length - 1 ? \"15px\" : \"0px\"\n      }; //apply appropriate border radiuses (<--for smart future students who know the plural of radius, please fix lol) depending on whether this item is first or last\n\n      return React.createElement(\"div\", {\n        className: \"wordListItem\",\n        style: _objectSpread({}, borderRadius, {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: 300 / props.words.positive.length + \"px\",\n          backgroundColor: index < colors.length ? colors[index] : colors[colors.length - 1]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, word.term));\n    })));\n  }\n};\n\nconst mapStateToProps = state => ({\n  words: state.widgetData.keyWords.data,\n  isFetching: state.widgetData.keyWords.isFetching,\n  error: state.widgetData.keyWords.error\n});\n\nexport default connect(mapStateToProps)(TopBottomWords);","map":{"version":3,"sources":["/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/WidgetSystem/Widgets/PositiveWords.js"],"names":["React","useState","useEffect","connect","makeStyles","Button","Grid","Paper","CircularProgress","useStyles","theme","root","height","display","paddingTop","flexDirection","alignItems","paper","padding","spacing","textAlign","color","palette","text","secondary","TopBottomWords","props","classes","colors","error","console","log","isFetching","words","minHeight","width","borderRadius","margin","positive","map","word","index","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","length","borderBottomRightRadius","justifyContent","backgroundColor","term","mapStateToProps","state","widgetData","keyWords","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    paddingTop: \"5%\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst TopBottomWords = props => {\n\n  const classes = useStyles();\n  // return (\n  //     <React.Fragment>\n  //      <Grid item xs={4} style={{ display: \"flex\", flexDirection: \"column\" }}>\n  //        <Paper className={classes.paper}>item</Paper>\n  //      </Grid>\n  //      <Grid item xs={4} style={{ display: \"flex\", flexDirection: \"column\" }}>\n  //        <Paper className={classes.paper}>item</Paper>\n  //      </Grid>\n  //    </React.Fragment>\n  // );\n\n  let colors = [\"#002487\", \"#002FA0\", \"#003CB8\", \"#004ACC\", \"#0074DF\", \"#068DEE\", \"#15AEF0\", \"#18C1F7\", \"#21D7FF\", \"#29E9FF\"];\n\n  if(props.error){\n    console.log(\"Error with props:\", props);\n    return <p>Error!</p>\n  }\n  if (props.isFetching || !props.words) {\n    return <h3><CircularProgress>Loading analytics...</CircularProgress></h3>;\n  } else {\n    return (\n      <div className=\"widget\">\n        <h3 className=\"widgetTitle\">Your customers are loving...</h3>\n        <p className=\"widgetSubtitle\">These are the words associated with the reviews with high ratings</p>\n        <div style={{ height: \"100%\", minHeight: \"300px\", width:\"90%\", borderRadius: \"15px\", margin: \"5%\" }} className={classes.root}>\n            {props.words.positive.map((word, index) => {\n              let borderRadius = {borderTopLeftRadius: index === 0 ? \"15px\" : \"0px\", borderTopRightRadius:  index === 0 ? \"15px\" : \"0px\", borderBottomLeftRadius: index === props.words.positive.length - 1 ? \"15px\" : \"0px\", borderBottomRightRadius: index === props.words.positive.length - 1 ? \"15px\" : \"0px\"};//apply appropriate border radiuses (<--for smart future students who know the plural of radius, please fix lol) depending on whether this item is first or last\n              return (\n                <div className=\"wordListItem\" style={{...borderRadius, display: \"flex\", alignItems: \"center\", justifyContent: \"center\", height: (300/props.words.positive.length) + \"px\", backgroundColor: index < colors.length ? colors[index] : colors[colors.length - 1]}}><p>{word.term}</p></div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({\n  words: state.widgetData.keyWords.data,\n  isFetching: state.widgetData.keyWords.isFetching,\n  error: state.widgetData.keyWords.error\n});\n\nexport default connect(mapStateToProps)(TopBottomWords);\n"]},"metadata":{},"sourceType":"module"}