{"ast":null,"code":"import _slicedToArray from \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/dashboard/Tab.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectBusiness, setActiveTabs } from \"../../actions/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\"; //expects a prop called business which contains business data\n\nconst BusinessTab = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        selected = _useState2[0],\n        setSelected = _useState2[1];\n\n  const _useState3 = useState(props.business),\n        _useState4 = _slicedToArray(_useState3, 2),\n        tabBusiness = _useState4[0],\n        setTabBusiness = _useState4[1];\n\n  useEffect(() => {\n    console.log(\"Setting tab business to \", props.business);\n    setTabBusiness(props.business);\n  }, [props.business]);\n\n  function getBusinessFromID(id) {\n    return props.businesses.filter(business => {\n      return id === business.businessId;\n    })[0];\n  }\n\n  useEffect(() => {\n    if (props.selectedBusiness) {\n      if (props.selectedBusiness.businessId === tabBusiness.businessId) {\n        setSelected(true);\n      } else {\n        setSelected(false);\n      }\n    }\n  }, [props.selectedBusiness, props.activeTabs, props.tabBusiness, props.businesses]);\n  let className = \"tab\"; // className += props.competitor ? \" competitorTab\" : \" businessTab\";\n\n  if (props.competitors.filter(item => tabBusiness.businessId === item.businessId).length >= 1) {\n    className += \" competitorTab\";\n  } else if (props.businesses.filter(item => tabBusiness.businessId === item.businessId).length >= 1) {\n    className += \" businessTab\";\n  } else {\n    className += \" newTab\";\n  }\n\n  className += selected ? \" selectedTab\" : \" unselectedTab\";\n\n  function deleteTab() {\n    let newActiveTabs = props.activeTabs.filter(tab => {\n      console.log(\"tab.businessId === tabBusiness.businessId \" + tab.businessId + \" === \" + tabBusiness.businessId);\n      return !(tab.businessId === tabBusiness.businessId);\n    });\n\n    if (newActiveTabs.length <= 0) {\n      let uniqueID = Date.now() + \"\";\n      newActiveTabs.push({\n        businessId: uniqueID\n      });\n      props.selectBusiness({\n        businessId: uniqueID\n      });\n      console.log(\"selecting biz:\", {\n        businessId: uniqueID\n      });\n    } else if (selected) {\n      let biz = getBusinessFromID(newActiveTabs[0].businessId);\n\n      if (biz) {\n        props.selectBusiness(props.selectedBusiness, biz);\n        console.log(\"selecting biz:\", biz);\n      } else {\n        props.selectBusiness(newActiveTabs[0]);\n        console.log(\"selecting biz:\", newActiveTabs[0]);\n      }\n    }\n\n    console.log(\"newActiveTabs: \", newActiveTabs);\n    props.setActiveTabs(props.activeTabs, newActiveTabs, localStorage.getItem(\"userID\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: className,\n    onClick: () => {\n      businessesContains(tabBusiness) ? props.selectBusiness(props.selectedBusiness, tabBusiness) : props.selectBusiness(tabBusiness);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"deleteTab\",\n    onClick: e => e.stopPropagation() & deleteTab(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"X\"), businessesContains(tabBusiness) ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, getBusinessFromID(tabBusiness.businessId).businessName)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"New Business\")), React.createElement(\"div\", {\n    className: \"tabSpace\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })); //used to check if this is an actual business or just a new tab\n\n  function businessesContains(business) {\n    let found = false; //console.log(\"Checking \", props.businesses, \" for \", business);\n\n    props.businesses.forEach(element => {\n      //console.log(\"element.businessId === business.businessId\", element.businessId, \"===\", business.businessId)\n      if (element.businessId === business.businessId) {\n        found = true;\n      }\n    });\n    return found;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedBusiness: state.currentlySelectedBusiness,\n    businesses: state.userBusinesses.businesses.concat(state.competitors.businesses),\n    activeTabs: state.tabs.activeTabs,\n    userBusinesses: state.userBusinesses.businesses,\n    competitors: state.competitors.businesses\n  };\n};\n\nexport default connect(mapStateToProps, {\n  selectBusiness,\n  setActiveTabs\n})(BusinessTab);","map":{"version":3,"sources":["/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/dashboard/Tab.js"],"names":["React","useState","useEffect","connect","selectBusiness","setActiveTabs","makeStyles","TextField","Button","BusinessTab","props","selected","setSelected","business","tabBusiness","setTabBusiness","console","log","getBusinessFromID","id","businesses","filter","businessId","selectedBusiness","activeTabs","className","competitors","item","length","deleteTab","newActiveTabs","tab","uniqueID","Date","now","push","biz","localStorage","getItem","businessesContains","e","stopPropagation","businessName","found","forEach","element","mapStateToProps","state","currentlySelectedBusiness","userBusinesses","concat","tabs"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { selectBusiness, setActiveTabs } from \"../../actions/index\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\n//expects a prop called business which contains business data\nconst BusinessTab = props => {\n\n  const [selected, setSelected] = useState(false);\n\n  const [tabBusiness, setTabBusiness] = useState(props.business);\n\n  useEffect(() => {\n    console.log(\"Setting tab business to \", props.business);\n    setTabBusiness(props.business);\n  }, [props.business])\n\n  function getBusinessFromID(id) {\n    return props.businesses.filter((business) => {\n      return id === business.businessId;\n    })[0]\n  }\n\n  useEffect(() => {\n    if (props.selectedBusiness) {\n      if (props.selectedBusiness.businessId === tabBusiness.businessId) {\n        setSelected(true);\n      } else {\n        setSelected(false);\n      }\n    }\n\n  }, [props.selectedBusiness, props.activeTabs, props.tabBusiness, props.businesses]);\n\n  let className = \"tab\";\n  // className += props.competitor ? \" competitorTab\" : \" businessTab\";\n  if (props.competitors.filter(item => tabBusiness.businessId === item.businessId).length >= 1) {\n    className += \" competitorTab\";\n  }else if (props.businesses.filter(item => tabBusiness.businessId === item.businessId).length >= 1) {\n    className += \" businessTab\";\n  }else{\n    className += \" newTab\";\n  }\n  className += selected ? \" selectedTab\" : \" unselectedTab\";\n\n  function deleteTab() {\n    let newActiveTabs = props.activeTabs.filter((tab) => {\n      console.log(\"tab.businessId === tabBusiness.businessId \" + tab.businessId + \" === \" + tabBusiness.businessId);\n      return !(tab.businessId === tabBusiness.businessId);\n    })\n    if (newActiveTabs.length <= 0) {\n      let uniqueID = Date.now() + \"\";\n      newActiveTabs.push({ businessId: uniqueID });\n      props.selectBusiness({ businessId: uniqueID });\n      console.log(\"selecting biz:\", { businessId: uniqueID });\n    } else if (selected) {\n      let biz = getBusinessFromID(newActiveTabs[0].businessId);\n      if (biz) {\n        props.selectBusiness(props.selectedBusiness, biz);\n        console.log(\"selecting biz:\", biz);\n      } else {\n        props.selectBusiness(newActiveTabs[0]);\n        console.log(\"selecting biz:\", newActiveTabs[0]);\n      }\n    }\n    console.log(\"newActiveTabs: \", newActiveTabs);\n    props.setActiveTabs(props.activeTabs, newActiveTabs, localStorage.getItem(\"userID\"));\n  }\n\n  return (\n    <div className={className} onClick={() => { \n      businessesContains(tabBusiness) ?\n      props.selectBusiness(props.selectedBusiness, tabBusiness)\n      :\n      props.selectBusiness(tabBusiness)\n      }}>\n      <div className=\"deleteTab\" onClick={(e) => e.stopPropagation() & deleteTab()}>X</div>\n      {businessesContains(tabBusiness) ? (\n        <div>\n\n          <p>\n            {getBusinessFromID(tabBusiness.businessId).businessName}\n            {/* {selected ? (\" - selected\") : (\"\")} */}\n          </p>\n\n        </div>\n      ) : (\n          <div>\n\n            <p>\n              New Business\n        {/* {selected ? (\" - selected\") : (\"\")} */}\n            </p>\n\n          </div>\n        )\n      }\n      <div className=\"tabSpace\"></div>{/* For styling, don't delete*/}\n    </div>\n  )\n\n  //used to check if this is an actual business or just a new tab\n  function businessesContains(business) {\n    let found = false;\n    //console.log(\"Checking \", props.businesses, \" for \", business);\n    props.businesses.forEach(element => {\n      //console.log(\"element.businessId === business.businessId\", element.businessId, \"===\", business.businessId)\n      if (element.businessId === business.businessId) {\n        found = true;\n      }\n    });\n    return found;\n  }\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedBusiness: state.currentlySelectedBusiness,\n    businesses: state.userBusinesses.businesses.concat(state.competitors.businesses),\n    activeTabs: state.tabs.activeTabs,\n    userBusinesses: state.userBusinesses.businesses,\n    competitors: state.competitors.businesses\n  };\n};\n\nexport default connect(mapStateToProps, { selectBusiness, setActiveTabs })(BusinessTab);\n"]},"metadata":{},"sourceType":"module"}