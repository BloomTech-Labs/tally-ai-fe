{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\WidgetSystem\\\\Widgets\\\\NegativeWords.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n    paddingTop: \"5%\",\n    flexDirection: \"column\"\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst NegativeWords = props => {\n  const classes = useStyles();\n  console.log(\"props.words in dashboard: \", props.words);\n  let colors = [\"#960A00\", \"#AC0B00\", \"#C10C00\", \"#D31307\", \"#E5150B\", \"#F42823\", \"#FF4340\", \"#FF5C5C\", \"#FF6F6D\", \"#FF8686\"];\n\n  if (props.error) {\n    console.log(\"Error with props:\", props);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Error!\");\n  }\n\n  if (props.isFetching || !props.words) {\n    return React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Loading analytics...\"));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"widget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"widgetTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"You can improve on...\"), React.createElement(\"p\", {\n      className: \"widgetSubtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"These are the words associated with the reviews with low ratings\"), React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        minHeight: \"300px\",\n        width: \"90%\",\n        borderRadius: \"15px\",\n        margin: \"5%\"\n      },\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, props.words.negative.map((word, index) => {\n      let borderRadius = {\n        borderTopLeftRadius: index === 0 ? \"15px\" : \"0px\",\n        borderTopRightRadius: index === 0 ? \"15px\" : \"0px\",\n        borderBottomLeftRadius: index === props.words.negative.length - 1 ? \"15px\" : \"0px\",\n        borderBottomRightRadius: index === props.words.negative.length - 1 ? \"15px\" : \"0px\"\n      }; //apply appropriate border radiuses (<--for smarter future students who know the plural of radius, please fix lol) depending on whether this item is first or last\n\n      return React.createElement(\"div\", {\n        className: \"wordListItem\",\n        style: _objectSpread({}, borderRadius, {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: 300 / props.words.negative.length + \"px\",\n          backgroundColor: index < colors.length ? colors[index] : colors[colors.length - 1]\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, word.term));\n    })));\n  }\n};\n\nconst mapStateToProps = state => ({\n  words: state.widgetData.keyWords.data,\n  isFetching: state.widgetData.keyWords.isFetching,\n  error: state.widgetData.keyWords.error\n});\n\nexport default connect(mapStateToProps)(NegativeWords);","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/WidgetSystem/Widgets/NegativeWords.js"],"names":["React","useState","useEffect","connect","makeStyles","Grid","Paper","CircularProgress","useStyles","theme","root","flexGrow","display","paddingTop","flexDirection","paper","padding","spacing","textAlign","color","palette","text","secondary","NegativeWords","props","classes","console","log","words","colors","error","isFetching","height","minHeight","width","borderRadius","margin","negative","map","word","index","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","length","borderBottomRightRadius","alignItems","justifyContent","backgroundColor","term","mapStateToProps","state","widgetData","keyWords","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAACK,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,UAAU,EAAE,IAHR;AAIJC,IAAAA,aAAa,EAAE;AAJX,GAD+B;AAOrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAP8B,CAAL,CAAN,CAA5B;;AAcA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAE7B,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CH,KAAK,CAACI,KAAhD;AAEA,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,SAApG,CAAb;;AAEA,MAAGL,KAAK,CAACM,KAAT,EAAe;AACbJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,KAAjC;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,MAAIA,KAAK,CAACO,UAAN,IAAoB,CAACP,KAAK,CAACI,KAA/B,EAAsC;AACpC,WAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAlB,CAAP;AACD,GAFD,MAEO;AACL,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADA,EAEA;AAAG,MAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EAFA,EAGA;AAAK,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,SAAS,EAAE,OAA7B;AAAsCC,QAAAA,KAAK,EAAC,KAA5C;AAAmDC,QAAAA,YAAY,EAAE,MAAjE;AAAyEC,QAAAA,MAAM,EAAE;AAAjF,OAAZ;AAAqG,MAAA,SAAS,EAAEX,OAAO,CAACf,IAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKc,KAAK,CAACI,KAAN,CAAYS,QAAZ,CAAqBC,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,UAAIL,YAAY,GAAG;AAACM,QAAAA,mBAAmB,EAAED,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuB,KAA7C;AAAoDE,QAAAA,oBAAoB,EAAGF,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuB,KAAlG;AAAyGG,QAAAA,sBAAsB,EAAEH,KAAK,KAAKhB,KAAK,CAACI,KAAN,CAAYS,QAAZ,CAAqBO,MAArB,GAA8B,CAAxC,GAA4C,MAA5C,GAAqD,KAAtL;AAA6LC,QAAAA,uBAAuB,EAAEL,KAAK,KAAKhB,KAAK,CAACI,KAAN,CAAYS,QAAZ,CAAqBO,MAArB,GAA8B,CAAxC,GAA4C,MAA5C,GAAqD;AAA3Q,OAAnB,CADyC,CAC4P;;AACrS,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,oBAAMT,YAAN;AAAoBvB,UAAAA,OAAO,EAAE,MAA7B;AAAqCkC,UAAAA,UAAU,EAAE,QAAjD;AAA2DC,UAAAA,cAAc,EAAE,QAA3E;AAAqFf,UAAAA,MAAM,EAAG,MAAIR,KAAK,CAACI,KAAN,CAAYS,QAAZ,CAAqBO,MAA1B,GAAoC,IAAjI;AAAuII,UAAAA,eAAe,EAAER,KAAK,GAAGX,MAAM,CAACe,MAAf,GAAwBf,MAAM,CAACW,KAAD,CAA9B,GAAwCX,MAAM,CAACA,MAAM,CAACe,MAAP,GAAgB,CAAjB;AAAtM,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIL,IAAI,CAACU,IAAT,CAA/P,CADF;AAGD,KALA,CADL,CAHA,CADF;AAcD;AACF,CA7BD;;AA+BA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCvB,EAAAA,KAAK,EAAEuB,KAAK,CAACC,UAAN,CAAiBC,QAAjB,CAA0BC,IADD;AAEhCvB,EAAAA,UAAU,EAAEoB,KAAK,CAACC,UAAN,CAAiBC,QAAjB,CAA0BtB,UAFN;AAGhCD,EAAAA,KAAK,EAAEqB,KAAK,CAACC,UAAN,CAAiBC,QAAjB,CAA0BvB;AAHD,CAAL,CAA7B;;AAMA,eAAe3B,OAAO,CAAC+C,eAAD,CAAP,CAAyB3B,aAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    paddingTop: \"5%\",\r\n    flexDirection: \"column\"\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nconst NegativeWords = props => {\r\n\r\n  const classes = useStyles();\r\n  console.log(\"props.words in dashboard: \", props.words);\r\n\r\n  let colors = [\"#960A00\", \"#AC0B00\", \"#C10C00\", \"#D31307\", \"#E5150B\", \"#F42823\", \"#FF4340\", \"#FF5C5C\", \"#FF6F6D\", \"#FF8686\"];\r\n\r\n  if(props.error){\r\n    console.log(\"Error with props:\", props);\r\n    return <p>Error!</p>\r\n  }\r\n  if (props.isFetching || !props.words) {\r\n    return <CircularProgress><h3>Loading analytics...</h3></CircularProgress>;\r\n  } else {\r\n    return (\r\n      <div className=\"widget\">\r\n      <h3 className=\"widgetTitle\">You can improve on...</h3>\r\n      <p className=\"widgetSubtitle\">These are the words associated with the reviews with low ratings</p>\r\n      <div style={{ height: \"100%\", minHeight: \"300px\", width:\"90%\", borderRadius: \"15px\", margin: \"5%\" }} className={classes.root}>\r\n          {props.words.negative.map((word, index) => {\r\n            let borderRadius = {borderTopLeftRadius: index === 0 ? \"15px\" : \"0px\", borderTopRightRadius:  index === 0 ? \"15px\" : \"0px\", borderBottomLeftRadius: index === props.words.negative.length - 1 ? \"15px\" : \"0px\", borderBottomRightRadius: index === props.words.negative.length - 1 ? \"15px\" : \"0px\"};//apply appropriate border radiuses (<--for smarter future students who know the plural of radius, please fix lol) depending on whether this item is first or last\r\n            return (\r\n              <div className=\"wordListItem\" style={{...borderRadius, display: \"flex\", alignItems: \"center\", justifyContent: \"center\", height: (300/props.words.negative.length) + \"px\", backgroundColor: index < colors.length ? colors[index] : colors[colors.length - 1]}}><p>{word.term}</p></div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n      );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  words: state.widgetData.keyWords.data,\r\n  isFetching: state.widgetData.keyWords.isFetching,\r\n  error: state.widgetData.keyWords.error\r\n});\r\n\r\nexport default connect(mapStateToProps)(NegativeWords);"]},"metadata":{},"sourceType":"module"}