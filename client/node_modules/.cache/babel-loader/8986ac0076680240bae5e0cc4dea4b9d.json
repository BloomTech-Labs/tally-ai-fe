{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\WidgetSystem\\\\Widgets\\\\RadarWidget.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from \"recharts\";\nimport { connect } from \"react-redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst RadarWidget = props => {\n  if (props.isFetching || props.error || !props.data) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Not enough data...\");\n  }\n\n  const data = props.data.map(item => {\n    return {\n      subject: item.subject,\n      data1: item.data1,\n      data2: item.data2,\n      fullMark: item.maxValue\n    };\n  }); //  [\n  //     { subject: 'Food', A: 45, B: 70, fullMark: 150 },\n  //     { subject: 'Service', A: 75, B: 95, fullMark: 150 },\n  //     { subject: 'Speed', A: 20, B: 50, fullMark: 150 },\n  //     { subject: 'Kindness', A: 65, B: 85, fullMark: 150 },\n  //     { subject: 'Ambience', A: 35, B: 45, fullMark: 150}\n  //   ];\n\n  console.log(\"RADAR DATA\", props.data);\n  return React.createElement(\"div\", {\n    className: \"widget\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"widgetTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Radar Data\"), React.createElement(\"p\", {\n    className: \"widgetSubtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"A cool Radar Chart\"), React.createElement(\"div\", {\n    className: \"graphContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(RadarChart, {\n    cx: 250,\n    cy: 200,\n    outerRadius: 110,\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(PolarGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(PolarAngleAxis, {\n    dataKey: \"subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(PolarRadiusAxis, {\n    angle: 30,\n    domain: [0, 100],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Radar, {\n    name: \"Data 1\",\n    dataKey: \"data1\",\n    stroke: \"blue\",\n    fill: \"blue\",\n    fillOpacity: 0.6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Radar, {\n    name: \"Data 2\",\n    dataKey: \"data2\",\n    stroke: \"green\",\n    fill: \"green\",\n    fillOpacity: 0.6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  data: state.widgetData.radarWidget.data,\n  isFetching: state.widgetData.radarWidget.isFetching,\n  error: state.widgetData.radarWidget.error\n});\n\nexport default connect(mapStateToProps, {})(RadarWidget);","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/WidgetSystem/Widgets/RadarWidget.js"],"names":["React","useState","useEffect","Radar","RadarChart","PolarGrid","Legend","PolarAngleAxis","PolarRadiusAxis","ResponsiveContainer","connect","CircularProgress","RadarWidget","props","isFetching","error","data","map","item","subject","data1","data2","fullMark","maxValue","console","log","top","right","left","bottom","mapStateToProps","state","widgetData","radarWidget"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Radar,\r\n  RadarChart,\r\n  PolarGrid,\r\n  Legend,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport { connect } from \"react-redux\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst RadarWidget = props => {\r\n  if (props.isFetching || props.error || !props.data) {\r\n    return <div>Not enough data...</div>;\r\n  }\r\n\r\n  const data = props.data.map(item => {\r\n    return {\r\n      subject: item.subject,\r\n      data1: item.data1,\r\n      data2: item.data2,\r\n      fullMark: item.maxValue\r\n    };\r\n  });\r\n  //  [\r\n  //     { subject: 'Food', A: 45, B: 70, fullMark: 150 },\r\n  //     { subject: 'Service', A: 75, B: 95, fullMark: 150 },\r\n  //     { subject: 'Speed', A: 20, B: 50, fullMark: 150 },\r\n  //     { subject: 'Kindness', A: 65, B: 85, fullMark: 150 },\r\n  //     { subject: 'Ambience', A: 35, B: 45, fullMark: 150}\r\n  //   ];\r\n\r\n  console.log(\"RADAR DATA\", props.data);\r\n  return (\r\n    <div className=\"widget\">\r\n      <h3 className=\"widgetTitle\">Radar Data</h3>\r\n      <p className=\"widgetSubtitle\">A cool Radar Chart</p>\r\n      <div className=\"graphContainer\">\r\n        <ResponsiveContainer            margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 100\r\n              }}>\r\n          <RadarChart\r\n            cx={250}\r\n            cy={200}\r\n            outerRadius={110}\r\n            data={data}\r\n          >\r\n            <PolarGrid />\r\n            <PolarAngleAxis dataKey=\"subject\" />\r\n            <PolarRadiusAxis angle={30} domain={[0, 100]} />\r\n            <Radar\r\n              name=\"Data 1\"\r\n              dataKey=\"data1\"\r\n              stroke=\"blue\"\r\n              fill=\"blue\"\r\n              fillOpacity={0.6}\r\n            />\r\n            <Radar\r\n              name=\"Data 2\"\r\n              dataKey=\"data2\"\r\n              stroke=\"green\"\r\n              fill=\"green\"\r\n              fillOpacity={0.6}\r\n            />\r\n            <Legend />\r\n          </RadarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.widgetData.radarWidget.data,\r\n  isFetching: state.widgetData.radarWidget.isFetching,\r\n  error: state.widgetData.radarWidget.error\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(RadarWidget);\r\n"]},"metadata":{},"sourceType":"module"}