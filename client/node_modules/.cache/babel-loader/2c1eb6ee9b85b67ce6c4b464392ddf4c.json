{"ast":null,"code":"import _slicedToArray from \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/dashboard/Tabs.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport BusinessTab from \"./Tab\";\nimport { setActiveTabs, selectBusiness } from \"../../actions/index\";\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start' // width: '100%'\n\n  }\n}); //expects a prop called business which contains business data\n\nconst BusinessTabs = props => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"tabs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.activeTabs.map(tab => {\n    return React.createElement(BusinessTab, {\n      business: tab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }), React.createElement(\"div\", {\n    className: \"addTab\",\n    onClick: () => {\n      let uniqueID = Date.now() + \"\";\n\n      if (props.activeTabs.length < 20) {\n        props.setActiveTabs(props.activeTabs, props.activeTabs.concat([{\n          businessId: uniqueID\n        }]), localStorage.getItem(\"userID\"));\n        props.selectBusiness({\n          businessId: uniqueID\n        });\n        console.log(\"adding new tab with ID \", uniqueID);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \" \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"+\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    activeTabs: state.tabs.activeTabs,\n    businesses: state.userBusinesses.businesses,\n    competitors: state.competitors.businesses\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setActiveTabs,\n  selectBusiness\n})(BusinessTabs);","map":{"version":3,"sources":["/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/dashboard/Tabs.js"],"names":["React","useState","useEffect","connect","makeStyles","Paper","Tabs","Tab","BusinessTab","setActiveTabs","selectBusiness","useStyles","root","flexGrow","display","flexDirection","justifyContent","BusinessTabs","props","classes","value","setValue","handleChange","event","newValue","activeTabs","map","tab","uniqueID","Date","now","length","concat","businessId","localStorage","getItem","console","log","mapStateToProps","state","tabs","businesses","userBusinesses","competitors"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAOC,WAAP,MAAwB,OAAxB;AAEA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,qBAA9C;AAEA,MAAMC,SAAS,GAAEP,UAAU,CAAC;AAC1BQ,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,aAAa,EAAE,KAHX;AAIJC,IAAAA,cAAc,EAAE,YAJZ,CAKJ;;AALI;AADoB,CAAD,CAA3B,C,CAUA;;AACA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE5B,QAAMC,OAAO,GAAGR,SAAS,EAAzB;;AAF4B,0BAGFX,KAAK,CAACC,QAAN,CAAe,CAAf,CAHE;AAAA;AAAA,QAGrBmB,KAHqB;AAAA,QAGdC,QAHc;;AAK5B,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGN,KAAK,CAACO,UAAN,CAAiBC,GAAjB,CAAqBC,GAAG,IAAI;AAC3B,WAAO,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEA,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAPH,EAWE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAE,MAAM;AACnC,UAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAL,KAAa,EAA5B;;AACA,UAAIZ,KAAK,CAACO,UAAN,CAAiBM,MAAjB,GAA0B,EAA9B,EAAkC;AAChCb,QAAAA,KAAK,CAACT,aAAN,CAAoBS,KAAK,CAACO,UAA1B,EAAsCP,KAAK,CAACO,UAAN,CAAiBO,MAAjB,CAAwB,CAAC;AAAEC,UAAAA,UAAU,EAAEL;AAAd,SAAD,CAAxB,CAAtC,EAA2FM,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA3F;AACAjB,QAAAA,KAAK,CAACR,cAAN,CAAqB;AAAEuB,UAAAA,UAAU,EAAEL;AAAd,SAArB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCT,QAAvC;AACD;AACJ,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SARF,CAXF,CADF;AAyBD,CAlCD;;AAoCA,MAAMU,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLd,IAAAA,UAAU,EAAEc,KAAK,CAACC,IAAN,CAAWf,UADlB;AAELgB,IAAAA,UAAU,EAAEF,KAAK,CAACG,cAAN,CAAqBD,UAF5B;AAGLE,IAAAA,WAAW,EAAEJ,KAAK,CAACI,WAAN,CAAkBF;AAH1B,GAAP;AAKD,CAND;;AAQA,eAAetC,OAAO,CAACmC,eAAD,EAAkB;AAAE7B,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAlB,CAAP,CAA4DO,YAA5D,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport BusinessTab from \"./Tab\";\n\nimport { setActiveTabs, selectBusiness } from \"../../actions/index\";\n\nconst useStyles= makeStyles({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    // width: '100%'\n  },\n});\n\n//expects a prop called business which contains business data\nconst BusinessTabs = props => {\n  \n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  \n  return (\n    <div className=\"tabs\" >\n      {/* {props.businesses.map(business => {\n        return <Tab business={business} competitor={false}/>;\n      })}\n      {props.competitors.map(competitor => {\n        return <Tab business={competitor} competitor={true}/>;\n      })} */}\n      {props.activeTabs.map(tab => {\n        return <BusinessTab business={tab} />;\n      })}\n      \n      <div className=\"addTab\" onClick={() => {\n          let uniqueID = Date.now() + \"\";\n          if (props.activeTabs.length < 20) {\n            props.setActiveTabs(props.activeTabs, props.activeTabs.concat([{ businessId: uniqueID }]), localStorage.getItem(\"userID\"));\n            props.selectBusiness({ businessId: uniqueID });\n            console.log(\"adding new tab with ID \", uniqueID);\n          }\n      }}> {/* Add an empty tab with a fake business, which means its an empty tab */}\n        <p>+</p>\n      </div>\n    </div>\n  );\n\n};\n\nconst mapStateToProps = state => {\n  return {\n    activeTabs: state.tabs.activeTabs,\n    businesses: state.userBusinesses.businesses,\n    competitors: state.competitors.businesses\n  };\n};\n\nexport default connect(mapStateToProps, { setActiveTabs, selectBusiness })(BusinessTabs);\n"]},"metadata":{},"sourceType":"module"}