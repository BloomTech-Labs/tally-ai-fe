{"ast":null,"code":"import _slicedToArray from \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/SearchPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\nimport { InputAdornment } from \"@material-ui/core\";\nimport Results from \"../components/search/results\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Link from \"@material-ui/core/Link\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCheckSquare, faCoffee } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport HomeIcons from \"./homeIcons\";\nimport HomeInfo from \"./HomeInfoText\";\nimport HomeFeatures from \"./HomeFeatures\";\nimport HomeBottomSection from \"./HomeBottomSection\";\nimport { fetchBusinesses, addBusiness, addCompetitor, removeBusiness, removeCompetitor, selectBusiness, setActiveTabs } from \"../actions/index\";\nimport axios from \"axios\";\nconst mapsKey = process.env.REACT_APP_MAPS_KEY;\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: \"auto\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(1),\n    marginTop: \"2%\",\n    marginBottom: \"6%\",\n    width: \"15%\"\n  },\n  input: {\n    display: \"none\"\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    transitionDuration: \"0.3s\",\n    width: \"35%\",\n    height: \"50%\",\n    margin: 20,\n    padding: 20,\n    borderRadius: 20\n  },\n  paper: {\n    position: \"absolute\",\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n})); //searchMode true = competitor search\n//searchMode false = my biz search\n\nconst SearchPage = props => {\n  const classes = useStyles();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setSearchTerm = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchLocation = _useState4[0],\n        setSearchLocation = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        readableLocation = _useState6[0],\n        setReadableLocation = _useState6[1];\n\n  function resultsSelection(selection) {\n    console.log(\"Selection: \", selection);\n\n    if (props.match.params.searchMode === \"competitor\") {\n      console.log(\"Adding competitor\");\n      props.addCompetitor(selection, localStorage.getItem(\"userID\"));\n    } else {\n      console.log(\"Adding business\", selection);\n      props.addBusiness(selection, localStorage.getItem(\"userID\"));\n    } //.filter((item) => !(item.businessId === props.selectedBusiness.businessId))\n\n\n    props.setActiveTabs(props.activeTabs, props.activeTabs.concat([selection]), localStorage.getItem(\"userID\")); //add a new tab with this new business selected and remove the old one empty tab that we selected this new business from\n\n    props.selectBusiness(props.selectedBusiness, selection); //lets go ahead and assume they want to view this new bussiness/competitor on the dashboard as well\n\n    props.history.push(\"/dashboard\");\n  }\n\n  useEffect(() => {\n    console.log(\"Added business resulting in new state: competitors \", props.competitors, \"businesses\", props.businesses);\n  }, [props.competitors, props.businesses]);\n  useEffect(() => {\n    if (searchLocation.latitude && searchLocation.longitude) {\n      //The searchLocation has changed to use latitude and a logitude, lets get the user friendly location from these coords and fill in the location field with it\n      axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${searchLocation.latitude},${searchLocation.longitude}&sensor=true&key=${mapsKey}`).then(res => {\n        console.log(\"Got location\", res);\n        setReadableLocation(res.data.results[4].formatted_address);\n      }).catch(err => {\n        console.error(\"Could not get location from coords\");\n      });\n    }\n  }, [searchLocation]);\n  console.log(\"SearchMode \", props.match.params);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-widget\",\n    style: {\n      backgroundSize: \"cover\",\n      minHeight: \"110vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-form\",\n    style: {\n      minHeight: \"90vh\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      color: \"#0D47A1\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"YelpBusinessH1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, props.match.params.searchMode === \"competitor\" ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Search for a Competitor\") : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Search for your Business\")), React.createElement(TextField, {\n    label: \"Business Name\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    type: \"text\",\n    className: classes.textField,\n    placeholder: \"Business Name\",\n    onChange: e => {\n      setSearchTerm(e.target.value);\n      console.log(\"Setting search term value to state\", e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"City or State\",\n    value: searchLocation.longitude && searchLocation.latitude ? readableLocation : searchLocation,\n    variant: \"outlined\",\n    margin: \"normal\",\n    type: \"text\",\n    className: `${classes.textField} `,\n    placeholder: searchLocation.logitude && searchLocation.latitude ? readableLocation : \"City or State\",\n    onChange: e => {\n      setSearchLocation(e.target.value);\n    } //     endAdornment={<InputAdornment position=\"end\">\n    //     <GpsFixedIcon\n    //       aria-label=\"locator-icon\"\n    //     //   onClick={handleClickShowPassword}\n    //     //   onMouseDown={handleMouseDownPassword}\n    //       edge=\"end\"\n    //     >\n    //       {/* {values.showPassword ? <Visibility /> : <VisibilityOff />} */}\n    //     </GpsFixedIcon>\n    //   </InputAdornment>\n    // <Tooltip title=\"Use your current location\" arrow>\n    ,\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Use your current location\",\n        arrow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(GpsFixedIcon, {\n        onClick: () => {\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(loc => {\n              setSearchLocation(loc.coords);\n            });\n          } else {\n            alert(\"Failed to access browser geolocation\");\n          }\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"blue\",\n    type: \"submit\",\n    onClick: e => {\n      e.preventDefault(); // props.searchResultsPlaceholder(placeholderBusinesses);\n\n      props.fetchBusinesses({\n        name: searchTerm,\n        location: searchLocation\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, \"Search\"))), React.createElement(Results, {\n    select: resultsSelection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  competitors: state.competitors.businesses,\n  businesses: state.userBusinesses.businesses,\n  activeTabs: state.tabs.activeTabs,\n  selectedBusiness: state.currentlySelectedBusiness\n});\n\nexport default connect(mapStateToProps, {\n  fetchBusinesses,\n  addBusiness,\n  addCompetitor,\n  removeBusiness,\n  removeCompetitor,\n  selectBusiness,\n  setActiveTabs\n})(SearchPage);","map":{"version":3,"sources":["/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/SearchPage.js"],"names":["React","useEffect","useState","connect","makeStyles","TextField","Tooltip","Button","GpsFixedIcon","InputAdornment","Results","Card","CardActionArea","CardActions","Link","CardContent","Typography","library","faCheckSquare","faCoffee","FontAwesomeIcon","HomeIcons","HomeInfo","HomeFeatures","HomeBottomSection","fetchBusinesses","addBusiness","addCompetitor","removeBusiness","removeCompetitor","selectBusiness","setActiveTabs","axios","mapsKey","process","env","REACT_APP_MAPS_KEY","useStyles","theme","container","display","flexWrap","flexDirection","alignItems","margin","textField","marginLeft","spacing","marginRight","width","dense","marginTop","button","marginBottom","input","card","transitionDuration","height","padding","borderRadius","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","SearchPage","props","classes","searchTerm","setSearchTerm","searchLocation","setSearchLocation","readableLocation","setReadableLocation","resultsSelection","selection","console","log","match","params","searchMode","localStorage","getItem","activeTabs","concat","selectedBusiness","history","push","competitors","businesses","latitude","longitude","get","then","res","data","results","formatted_address","catch","err","error","backgroundSize","minHeight","justifyContent","color","e","target","value","logitude","endAdornment","navigator","geolocation","getCurrentPosition","loc","coords","alert","cursor","preventDefault","name","location","mapStateToProps","state","userBusinesses","tabs","currentlySelectedBusiness"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,mCAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,SACEC,eADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,gBALF,EAMEC,cANF,EAOEC,aAPF,QAQO,kBARP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AAEA,MAAMC,SAAS,GAAGjC,UAAU,CAACkC,KAAK,KAAK;AACrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE,MAFD;AAGTC,IAAAA,aAAa,EAAE,QAHN;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,MAAM,EAAE;AALC,GAD0B;AAQrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADH;AAETC,IAAAA,WAAW,EAAEV,KAAK,CAACS,OAAN,CAAc,CAAd,CAFJ;AAGTE,IAAAA,KAAK,EAAE;AAHE,GAR0B;AAarCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEb,KAAK,CAACS,OAAN,CAAc,CAAd;AADN,GAb8B;AAiBrCK,EAAAA,MAAM,EAAE;AACNR,IAAAA,MAAM,EAAEN,KAAK,CAACS,OAAN,CAAc,CAAd,CADF;AAENI,IAAAA,SAAS,EAAE,IAFL;AAGNE,IAAAA,YAAY,EAAE,IAHR;AAINJ,IAAAA,KAAK,EAAE;AAJD,GAjB6B;AAuBrCK,EAAAA,KAAK,EAAE;AACLd,IAAAA,OAAO,EAAE;AADJ,GAvB8B;AA0BrCe,EAAAA,IAAI,EAAE;AACJf,IAAAA,OAAO,EAAE,MADL;AAEJE,IAAAA,aAAa,EAAE,QAFX;AAGJc,IAAAA,kBAAkB,EAAE,MAHhB;AAIJP,IAAAA,KAAK,EAAE,KAJH;AAKJQ,IAAAA,MAAM,EAAE,KALJ;AAMJb,IAAAA,MAAM,EAAE,EANJ;AAOJc,IAAAA,OAAO,EAAE,EAPL;AAQJC,IAAAA,YAAY,EAAE;AARV,GA1B+B;AAoCrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELZ,IAAAA,KAAK,EAAE,GAFF;AAGLa,IAAAA,eAAe,EAAExB,KAAK,CAACyB,OAAN,CAAcC,UAAd,CAAyBJ,KAHrC;AAILK,IAAAA,MAAM,EAAE,gBAJH;AAKLC,IAAAA,SAAS,EAAE5B,KAAK,CAAC6B,OAAN,CAAc,CAAd,CALN;AAMLT,IAAAA,OAAO,EAAEpB,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AANJ;AApC8B,CAAL,CAAN,CAA5B,C,CA8CA;AACA;;AACA,MAAMqB,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,OAAO,GAAGjC,SAAS,EAAzB;;AAD0B,oBAGUnC,QAAQ,EAHlB;AAAA;AAAA,QAGnBqE,UAHmB;AAAA,QAGPC,aAHO;;AAAA,qBAIkBtE,QAAQ,CAAC,EAAD,CAJ1B;AAAA;AAAA,QAInBuE,cAJmB;AAAA,QAIHC,iBAJG;;AAAA,qBAKsBxE,QAAQ,EAL9B;AAAA;AAAA,QAKnByE,gBALmB;AAAA,QAKDC,mBALC;;AAO1B,WAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,SAA3B;;AAEA,QAAIT,KAAK,CAACY,KAAN,CAAYC,MAAZ,CAAmBC,UAAnB,KAAkC,YAAtC,EAAoD;AAClDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAX,MAAAA,KAAK,CAAC1C,aAAN,CAAoBmD,SAApB,EAA+BM,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA/B;AACD,KAHD,MAGO;AACLN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,SAA/B;AACAT,MAAAA,KAAK,CAAC3C,WAAN,CAAkBoD,SAAlB,EAA6BM,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA7B;AACD,KATkC,CASlC;;;AACDhB,IAAAA,KAAK,CAACtC,aAAN,CAAoBsC,KAAK,CAACiB,UAA1B,EAAsCjB,KAAK,CAACiB,UAAN,CAAiBC,MAAjB,CAAwB,CAACT,SAAD,CAAxB,CAAtC,EAA4EM,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA5E,EAVmC,CAUyE;;AAC5GhB,IAAAA,KAAK,CAACvC,cAAN,CAAqBuC,KAAK,CAACmB,gBAA3B,EAA6CV,SAA7C,EAXmC,CAWsB;;AACzDT,IAAAA,KAAK,CAACoB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD;;AAEDzF,EAAAA,SAAS,CAAC,MAAM;AACd8E,IAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ,EAAmEX,KAAK,CAACsB,WAAzE,EAAsF,YAAtF,EAAoGtB,KAAK,CAACuB,UAA1G;AACD,GAFQ,EAEN,CAACvB,KAAK,CAACsB,WAAP,EAAoBtB,KAAK,CAACuB,UAA1B,CAFM,CAAT;AAIA3F,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIwE,cAAc,CAACoB,QAAf,IAA2BpB,cAAc,CAACqB,SAA9C,EAAyD;AACvD;AACA9D,MAAAA,KAAK,CACF+D,GADH,CAEK,4DAA2DtB,cAAc,CAACoB,QAAS,IAAGpB,cAAc,CAACqB,SAAU,oBAAmB7D,OAAQ,EAF/I,EAIG+D,IAJH,CAIQC,GAAG,IAAI;AACXlB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BiB,GAA5B;AACArB,QAAAA,mBAAmB,CAACqB,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBC,iBAArB,CAAnB;AACD,OAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZvB,QAAAA,OAAO,CAACwB,KAAR,CAAc,oCAAd;AACD,OAVH;AAWD;AACF,GAfQ,EAeN,CAAC9B,cAAD,CAfM,CAAT;AAiBAM,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BX,KAAK,CAACY,KAAN,CAAYC,MAAvC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,KAAK,EAAE;AACLsB,MAAAA,cAAc,EAAE,OADX;AAELC,MAAAA,SAAS,EAAE;AAFN,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,KAAK,EAAE;AACLA,MAAAA,SAAS,EAAE,MADN;AAELxD,MAAAA,KAAK,EAAE,MAFF;AAGLT,MAAAA,OAAO,EAAE,MAHJ;AAILkE,MAAAA,cAAc,EAAE,YAJX;AAKL/D,MAAAA,UAAU,EAAE,QALP;AAMLgE,MAAAA,KAAK,EAAE;AANF,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBE;AAAM,IAAA,SAAS,EAAErC,OAAO,CAAC/B,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG8B,KAAK,CAACY,KAAN,CAAYC,MAAZ,CAAmBC,UAAnB,KAAkC,YAAlC,GAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFD,GAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALJ,CADF,EASE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,SAAS,EAAEb,OAAO,CAACzB,SALrB;AAME,IAAA,WAAW,EAAC,eANd;AAOE,IAAA,QAAQ,EAAE+D,CAAC,IAAI;AACbpC,MAAAA,aAAa,CAACoC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACA/B,MAAAA,OAAO,CAACC,GAAR,CACE,oCADF,EAEE4B,CAAC,CAACC,MAAF,CAASC,KAFX;AAID,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAwBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,KAAK,EACHrC,cAAc,CAACqB,SAAf,IAA4BrB,cAAc,CAACoB,QAA3C,GACIlB,gBADJ,GAEIF,cALR;AAOE,IAAA,OAAO,EAAC,UAPV;AAQE,IAAA,MAAM,EAAC,QART;AASE,IAAA,IAAI,EAAC,MATP;AAUE,IAAA,SAAS,EAAG,GAAEH,OAAO,CAACzB,SAAU,GAVlC;AAWE,IAAA,WAAW,EACT4B,cAAc,CAACsC,QAAf,IAA2BtC,cAAc,CAACoB,QAA1C,GACIlB,gBADJ,GAEI,eAdR;AAgBE,IAAA,QAAQ,EAAEiC,CAAC,IAAI;AACblC,MAAAA,iBAAiB,CAACkC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AACD,KAlBH,CAmBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA9BF;AA+BE,IAAA,UAAU,EAAE;AACVE,MAAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,2BAAf;AAA2C,QAAA,KAAK,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,YAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,GAAG,IAAI;AAC9C1C,cAAAA,iBAAiB,CAAC0C,GAAG,CAACC,MAAL,CAAjB;AACD,aAFD;AAGD,WAJD,MAIO;AACLC,YAAAA,KAAK,CAAC,sCAAD,CAAL;AACD;AACF,SATH;AAUE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAFQ,KA/Bd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EA4EE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEjD,OAAO,CAAClB,MADrB;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,OAAO,EAAEwD,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACY,cAAF,GADY,CAEZ;;AACAnD,MAAAA,KAAK,CAAC5C,eAAN,CAAsB;AACpBgG,QAAAA,IAAI,EAAElD,UADc;AAEpBmD,QAAAA,QAAQ,EAAEjD;AAFU,OAAtB;AAID,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5EF,CArBF,CATF,EA4HE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5HF,CADF,CADF,CADF;AAsID,CAnLD;;AAqLA,MAAM8C,eAAe,GAAGC,KAAK,KAAK;AAChCjC,EAAAA,WAAW,EAAEiC,KAAK,CAACjC,WAAN,CAAkBC,UADC;AAEhCA,EAAAA,UAAU,EAAEgC,KAAK,CAACC,cAAN,CAAqBjC,UAFD;AAGhCN,EAAAA,UAAU,EAAEsC,KAAK,CAACE,IAAN,CAAWxC,UAHS;AAIhCE,EAAAA,gBAAgB,EAAEoC,KAAK,CAACG;AAJQ,CAAL,CAA7B;;AAOA,eAAe5H,OAAO,CAACwH,eAAD,EAAkB;AACtClG,EAAAA,eADsC;AAEtCC,EAAAA,WAFsC;AAGtCC,EAAAA,aAHsC;AAItCC,EAAAA,cAJsC;AAKtCC,EAAAA,gBALsC;AAMtCC,EAAAA,cANsC;AAOtCC,EAAAA;AAPsC,CAAlB,CAAP,CAQZqC,UARY,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\nimport { InputAdornment } from \"@material-ui/core\";\nimport Results from \"../components/search/results\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Link from \"@material-ui/core/Link\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCheckSquare, faCoffee } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport HomeIcons from \"./homeIcons\";\nimport HomeInfo from \"./HomeInfoText\";\nimport HomeFeatures from \"./HomeFeatures\";\nimport HomeBottomSection from \"./HomeBottomSection\";\n\nimport {\n  fetchBusinesses,\n  addBusiness,\n  addCompetitor,\n  removeBusiness,\n  removeCompetitor,\n  selectBusiness,\n  setActiveTabs\n} from \"../actions/index\";\n\nimport axios from \"axios\";\n\nconst mapsKey = process.env.REACT_APP_MAPS_KEY;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    margin: \"auto\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n\n  button: {\n    margin: theme.spacing(1),\n    marginTop: \"2%\",\n    marginBottom: \"6%\",\n    width: \"15%\"\n  },\n  input: {\n    display: \"none\"\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    transitionDuration: \"0.3s\",\n    width: \"35%\",\n    height: \"50%\",\n    margin: 20,\n    padding: 20,\n    borderRadius: 20\n  },\n  paper: {\n    position: \"absolute\",\n    width: 600,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\n//searchMode true = competitor search\n//searchMode false = my biz search\nconst SearchPage = props => {\n  const classes = useStyles();\n\n  const [searchTerm, setSearchTerm] = useState();\n  const [searchLocation, setSearchLocation] = useState(\"\");\n  const [readableLocation, setReadableLocation] = useState();\n\n  function resultsSelection(selection) {\n    console.log(\"Selection: \", selection);\n\n    if (props.match.params.searchMode === \"competitor\") {\n      console.log(\"Adding competitor\");\n      props.addCompetitor(selection, localStorage.getItem(\"userID\"));\n    } else {\n      console.log(\"Adding business\", selection);\n      props.addBusiness(selection, localStorage.getItem(\"userID\"));\n    }//.filter((item) => !(item.businessId === props.selectedBusiness.businessId))\n    props.setActiveTabs(props.activeTabs, props.activeTabs.concat([selection]), localStorage.getItem(\"userID\"));//add a new tab with this new business selected and remove the old one empty tab that we selected this new business from\n    props.selectBusiness(props.selectedBusiness, selection); //lets go ahead and assume they want to view this new bussiness/competitor on the dashboard as well\n    props.history.push(\"/dashboard\");\n  }\n\n  useEffect(() => {\n    console.log(\"Added business resulting in new state: competitors \", props.competitors, \"businesses\", props.businesses);\n  }, [props.competitors, props.businesses])\n\n  useEffect(() => {\n    if (searchLocation.latitude && searchLocation.longitude) {\n      //The searchLocation has changed to use latitude and a logitude, lets get the user friendly location from these coords and fill in the location field with it\n      axios\n        .get(\n          `https://maps.googleapis.com/maps/api/geocode/json?latlng=${searchLocation.latitude},${searchLocation.longitude}&sensor=true&key=${mapsKey}`\n        )\n        .then(res => {\n          console.log(\"Got location\", res);\n          setReadableLocation(res.data.results[4].formatted_address);\n        })\n        .catch(err => {\n          console.error(\"Could not get location from coords\");\n        });\n    }\n  }, [searchLocation]);\n\n  console.log(\"SearchMode \", props.match.params);\n\n  return (\n    <div>\n      <div>\n        <div\n          className=\"search-widget\"\n          style={{\n            backgroundSize: \"cover\",\n            minHeight: \"110vh\"\n          }}\n        >\n          {/* <h1>See what customers are saying about your business!</h1> */}\n\n          <div\n            className=\"search-form\"\n            style={{\n              minHeight: \"90vh\",\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              color: \"#0D47A1\",\n              \n            }}\n          >\n            {/* <div class=\"mdc-text-field mdc-text-field--outlined\">\n            <input type=\"text\" id=\"tf-outlined\" class=\"mdc-text-field__input\"></input>\n            <div class=\"mdc-notched-outline\"></div>\n            <div class=\"mdc-notched-outline__notch\">\n            <label for=\"tf-outlined\" class=\"mdc-floating-label\">Your Name</label>\n            </div>\n            <div class=\"mdc-notched-outline__trailing\"></div>\n            </div> */}\n            {/* <h1>Search for a business to get started</h1> */}\n            <form className={classes.container}>\n              <div className=\"YelpBusinessH1\">\n                {props.match.params.searchMode === \"competitor\" ? (\n\n                  <h1>Search for a Competitor</h1>\n                ) : (\n                  <h1>Search for your Business</h1>\n                )}\n              </div>\n              <TextField\n                label=\"Business Name\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                type=\"text\"\n                className={classes.textField}\n                placeholder=\"Business Name\"\n                onChange={e => {\n                  setSearchTerm(e.target.value);\n                  console.log(\n                    \"Setting search term value to state\",\n                    e.target.value\n                  );\n                }}\n              />\n              <TextField\n                label=\"City or State\"\n                value={\n                  searchLocation.longitude && searchLocation.latitude\n                    ? readableLocation\n                    : searchLocation\n                }\n                variant=\"outlined\"\n                margin=\"normal\"\n                type=\"text\"\n                className={`${classes.textField} `}\n                placeholder={\n                  searchLocation.logitude && searchLocation.latitude\n                    ? readableLocation\n                    : \"City or State\"\n                }\n                onChange={e => {\n                  setSearchLocation(e.target.value);\n                }}\n                //     endAdornment={<InputAdornment position=\"end\">\n                //     <GpsFixedIcon\n                //       aria-label=\"locator-icon\"\n                //     //   onClick={handleClickShowPassword}\n                //     //   onMouseDown={handleMouseDownPassword}\n                //       edge=\"end\"\n                //     >\n                //       {/* {values.showPassword ? <Visibility /> : <VisibilityOff />} */}\n                //     </GpsFixedIcon>\n                //   </InputAdornment>\n\n                // <Tooltip title=\"Use your current location\" arrow>\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <Tooltip title=\"Use your current location\" arrow>\n                        <GpsFixedIcon\n                          onClick={() => {\n                            if (navigator.geolocation) {\n                              navigator.geolocation.getCurrentPosition(loc => {\n                                setSearchLocation(loc.coords);\n                              });\n                            } else {\n                              alert(\"Failed to access browser geolocation\");\n                            }\n                          }}\n                          style={{ cursor: \"pointer\" }}\n                        />\n                      </Tooltip>\n                    </InputAdornment>\n                  )\n                }}\n              ></TextField>\n              <Button\n                className={classes.button}\n                variant=\"outlined\"\n                color=\"blue\"\n                type=\"submit\"\n                onClick={e => {\n                  e.preventDefault();\n                  // props.searchResultsPlaceholder(placeholderBusinesses);\n                  props.fetchBusinesses({\n                    name: searchTerm,\n                    location: searchLocation\n                  });\n                }}\n              >\n                Search\n              </Button>\n            </form>\n          </div>\n          <Results select={resultsSelection} />\n        </div>\n      </div>\n\n      {/*  closes div containing backgroundcolor */}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  competitors: state.competitors.businesses,\n  businesses: state.userBusinesses.businesses,\n  activeTabs: state.tabs.activeTabs,\n  selectedBusiness: state.currentlySelectedBusiness\n});\n\nexport default connect(mapStateToProps, {\n  fetchBusinesses,\n  addBusiness,\n  addCompetitor,\n  removeBusiness,\n  removeCompetitor,\n  selectBusiness,\n  setActiveTabs\n})(SearchPage);\n"]},"metadata":{},"sourceType":"module"}