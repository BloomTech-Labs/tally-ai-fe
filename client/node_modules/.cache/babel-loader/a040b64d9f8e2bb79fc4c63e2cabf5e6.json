{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\search.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\nimport { InputAdornment } from \"@material-ui/core\";\nimport Results from \"../components/search/results\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCheckSquare, faCoffee } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport HomeIcons from \"./homeIcons\";\nimport HomeInfo from \"./HomeInfoText\";\nimport HomeFeatures from \"./HomeFeatures\";\nimport HomeBottomSection from \"./HomeBottomSection\";\nimport HomePitches from './HomePitches';\nimport { fetchBusinesses, selectBusiness } from \"../actions/index\";\nimport { searchResultsPlaceholder } from \"../actions/index\";\nimport axios from \"axios\";\nimport tallySearchLogo from \"../components/images/tallySearchLogo.png\";\nconst mapsKey = process.env.REACT_APP_MAPS_KEY;\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    textAlign: \"left\",\n    alignContent: 'center',\n    width: \"40%\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\",\n    marginTop: \"1%\"\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(1),\n    marginTop: \"2%\",\n    marginBottom: \"6%\",\n    width: \"18%\",\n    backgroundColor: \"#619FFF\",\n    color: \"white\"\n  },\n  input: {\n    display: \"none\"\n  }\n}));\n\nconst Search = props => {\n  const classes = useStyles();\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setSearchTerm = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchLocation = _useState4[0],\n        setSearchLocation = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        readableLocation = _useState6[0],\n        setReadableLocation = _useState6[1];\n\n  function resultsSelection(selection) {\n    console.log(\"Selection: \", selection);\n    props.selectBusiness(props.selectedBusiness, selection);\n    props.history.push(\"/dashboard\");\n  }\n\n  useEffect(() => {\n    if (searchLocation.latitude && searchLocation.longitude) {\n      //The searchLocation has changed to use latitude and a logitude, lets get the user friendly location from these coords and fill in the location field with it\n      axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${searchLocation.latitude},${searchLocation.longitude}&sensor=true&key=${mapsKey}`).then(res => {\n        console.log(\"Got location\", res);\n        setReadableLocation(res.data.results[4].formatted_address);\n      }).catch(err => {\n        console.error(\"Could not get location from coords\");\n      });\n    }\n  }, [searchLocation]);\n  return React.createElement(\"div\", {\n    className: \"backgroundcolor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-widget\",\n    style: {\n      backgroundSize: \"cover\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-form\",\n    style: {\n      height: \"100vh\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      marginTop: \"16vh\",\n      color: \"black\",\n      marginLeft: \"10%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: props.searchResults ? \" growSearch\" : classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"YelpBusinessH1\",\n    style: {\n      textAlign: 'left',\n      fontSize: '135%',\n      fontWeight: '900'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      paddingLeft: '2%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"See what customers are saying about your business!\")), React.createElement(\"h2\", {\n    className: \"YelpBusinessH2\",\n    style: {\n      paddingLeft: '2%',\n      textAlign: 'left'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Search for a Yelp Business to get started\"), React.createElement(TextField, {\n    label: \"Business Name\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    type: \"text\",\n    className: classes.textField,\n    placeholder: \"Business Name\",\n    onChange: e => {\n      setSearchTerm(e.target.value);\n      console.log(\"Setting search term value to state\", e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"City or State\",\n    value: searchLocation.longitude && searchLocation.latitude ? readableLocation : searchLocation,\n    variant: \"outlined\",\n    margin: \"normal\",\n    type: \"text\",\n    className: `${classes.textField} `,\n    placeholder: searchLocation.logitude && searchLocation.latitude ? readableLocation : \"City or State\",\n    onChange: e => {\n      setSearchLocation(e.target.value);\n    },\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        title: \"Use your current location\",\n        arrow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(GpsFixedIcon, {\n        onClick: () => {\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(loc => {\n              setSearchLocation(loc.coords);\n            });\n          } else {\n            alert(\"Failed to access browser geolocation\");\n          }\n        },\n        style: {\n          cursor: \"pointer\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })))\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"blue\",\n    type: \"submit\",\n    style: {\n      borderRadius: '40px',\n      width: '20%'\n    },\n    onClick: e => {\n      e.preventDefault(); // props.searchResultsPlaceholder(placeholderBusinesses);\n\n      props.fetchBusinesses({\n        name: searchTerm,\n        location: searchLocation\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Search\"))), React.createElement(Results, {\n    select: resultsSelection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })), !props.searchResults ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tallySearchLogo,\n    alt: \"tally search logo\",\n    style: {\n      position: 'absolute',\n      top: '0px',\n      right: '0px',\n      width: '50%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(HomeIcons, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }), React.createElement(HomeInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }), React.createElement(HomeFeatures, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }), React.createElement(HomePitches, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }), React.createElement(HomeBottomSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = state => ({\n  searchResults: state.searchResults.data,\n  selectedBusiness: state.currentlySelectedBusiness\n});\n\nexport default connect(mapStateToProps, {\n  fetchBusinesses,\n  selectBusiness\n})(Search);","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/search.js"],"names":["React","useEffect","useState","connect","makeStyles","TextField","Tooltip","Button","GpsFixedIcon","InputAdornment","Results","library","faCheckSquare","faCoffee","FontAwesomeIcon","HomeIcons","HomeInfo","HomeFeatures","HomeBottomSection","HomePitches","fetchBusinesses","selectBusiness","searchResultsPlaceholder","axios","tallySearchLogo","mapsKey","process","env","REACT_APP_MAPS_KEY","useStyles","theme","container","display","flexWrap","flexDirection","textAlign","alignContent","width","textField","marginLeft","spacing","marginRight","marginTop","dense","button","margin","marginBottom","backgroundColor","color","input","Search","props","classes","searchTerm","setSearchTerm","searchLocation","setSearchLocation","readableLocation","setReadableLocation","resultsSelection","selection","console","log","selectedBusiness","history","push","latitude","longitude","get","then","res","data","results","formatted_address","catch","err","error","backgroundSize","height","justifyContent","searchResults","fontSize","fontWeight","paddingLeft","e","target","value","logitude","endAdornment","navigator","geolocation","getCurrentPosition","loc","coords","alert","cursor","borderRadius","preventDefault","name","location","position","top","right","mapStateToProps","state","currentlySelectedBusiness"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GpsFixedIcon from \"@material-ui/icons/GpsFixed\";\r\nimport { InputAdornment } from \"@material-ui/core\";\r\nimport Results from \"../components/search/results\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faCheckSquare, faCoffee } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport HomeIcons from \"./homeIcons\";\r\nimport HomeInfo from \"./HomeInfoText\";\r\nimport HomeFeatures from \"./HomeFeatures\";\r\nimport HomeBottomSection from \"./HomeBottomSection\";\r\nimport HomePitches from './HomePitches';\r\n\r\nimport { fetchBusinesses, selectBusiness } from \"../actions/index\";\r\nimport { searchResultsPlaceholder } from \"../actions/index\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport tallySearchLogo from \"../components/images/tallySearchLogo.png\";\r\n\r\nconst mapsKey = process.env.REACT_APP_MAPS_KEY;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"column\",\r\n    textAlign:\"left\",\r\n    alignContent:'center',\r\n    width: \"40%\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n    marginTop: \"1%\"\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    marginTop: \"2%\",\r\n    marginBottom: \"6%\",\r\n    width: \"18%\",\r\n    backgroundColor: \"#619FFF\",\r\n    color: \"white\"\r\n\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\nconst Search = props => {\r\n  const classes = useStyles();\r\n\r\n  const [searchTerm, setSearchTerm] = useState();\r\n  const [searchLocation, setSearchLocation] = useState(\"\");\r\n  const [readableLocation, setReadableLocation] = useState();\r\n\r\n  function resultsSelection(selection) {\r\n    console.log(\"Selection: \", selection);\r\n\r\n    props.selectBusiness(props.selectedBusiness, selection);\r\n\r\n    props.history.push(\"/dashboard\");\r\n}\r\n\r\n  useEffect(() => {\r\n    if (searchLocation.latitude && searchLocation.longitude) {\r\n      //The searchLocation has changed to use latitude and a logitude, lets get the user friendly location from these coords and fill in the location field with it\r\n      axios\r\n        .get(\r\n          `https://maps.googleapis.com/maps/api/geocode/json?latlng=${searchLocation.latitude},${searchLocation.longitude}&sensor=true&key=${mapsKey}`\r\n        )\r\n        .then(res => {\r\n          console.log(\"Got location\", res);\r\n          setReadableLocation(res.data.results[4].formatted_address);\r\n        })\r\n        .catch(err => {\r\n          console.error(\"Could not get location from coords\");\r\n        });\r\n    }\r\n  }, [searchLocation]);\r\n\r\n  return (\r\n    <div className=\"backgroundcolor\">\r\n      <div >\r\n      <div\r\n        className=\"search-widget\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          \r\n        }}\r\n      >\r\n        {/* <h1>See what customers are saying about your business!</h1> */}\r\n\r\n        <div\r\n          className=\"search-form\"\r\n          style={{\r\n            height: \"100vh\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            marginTop: \"16vh\",\r\n            color: \"black\",\r\n            marginLeft: \"10%\",\r\n          }}\r\n        >\r\n          {/* <div class=\"mdc-text-field mdc-text-field--outlined\">\r\n            <input type=\"text\" id=\"tf-outlined\" class=\"mdc-text-field__input\"></input>\r\n            <div class=\"mdc-notched-outline\"></div>\r\n            <div class=\"mdc-notched-outline__notch\">\r\n            <label for=\"tf-outlined\" class=\"mdc-floating-label\">Your Name</label>\r\n            </div>\r\n            <div class=\"mdc-notched-outline__trailing\"></div>\r\n            </div> */}\r\n          {/* <h1>Search for a business to get started</h1> */}\r\n          <form className={(props.searchResults ? \" growSearch\" : classes.container)}>\r\n            <div className=\"YelpBusinessH1\" style={{textAlign:'left', fontSize:'135%', fontWeight:'900'}}>\r\n            <h1 style={{paddingLeft:'2%'}}>See what customers are saying about your business!</h1>\r\n            </div>\r\n            <h2 className=\"YelpBusinessH2\" style={{paddingLeft: '2%', textAlign:'left'}}>Search for a Yelp Business to get started</h2>\r\n            <TextField\r\n              label=\"Business Name\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={classes.textField}\r\n              placeholder=\"Business Name\"\r\n              onChange={e => {\r\n                setSearchTerm(e.target.value);\r\n                console.log(\r\n                  \"Setting search term value to state\",\r\n                  e.target.value\r\n                );\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"City or State\"\r\n              value={\r\n                searchLocation.longitude && searchLocation.latitude\r\n                  ? readableLocation\r\n                  : searchLocation\r\n              }\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              className={`${classes.textField} `}\r\n              placeholder={\r\n                searchLocation.logitude && searchLocation.latitude\r\n                  ? readableLocation\r\n                  : \"City or State\"\r\n              }\r\n              onChange={e => {\r\n                setSearchLocation(e.target.value);\r\n              }}\r\n              \r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <Tooltip title=\"Use your current location\" arrow>\r\n                      <GpsFixedIcon\r\n                        onClick={() => {\r\n                          if (navigator.geolocation) {\r\n                            navigator.geolocation.getCurrentPosition(loc => {\r\n                              setSearchLocation(loc.coords);\r\n                            });\r\n                          } else {\r\n                            alert(\"Failed to access browser geolocation\");\r\n                          }\r\n                        }}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      />\r\n                    </Tooltip>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            ></TextField>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"outlined\"\r\n              color=\"blue\"\r\n              type=\"submit\"\r\n              style={{borderRadius:'40px', width:'20%'}}\r\n              onClick={e => {\r\n                e.preventDefault();\r\n                // props.searchResultsPlaceholder(placeholderBusinesses);\r\n                props.fetchBusinesses({\r\n                  name: searchTerm,\r\n                  location: searchLocation\r\n                });\r\n              }}\r\n            >\r\n              Search\r\n            </Button>\r\n          </form>\r\n          \r\n        </div>\r\n        <Results select={resultsSelection}/>\r\n      </div>\r\n      \r\n      {/*  closes div containing backgroundcolor */}\r\n      {/* Made it conditionally render the content at the bottom of the landing page. Once the results come in, the marketing content disappears */}\r\n      {!props.searchResults\r\n        ? (\r\n          <div>\r\n          <img src={tallySearchLogo} alt=\"tally search logo\" style={{position:'absolute', top:'0px', right:'0px', width:'50%' }} />\r\n            <div>\r\n              <HomeIcons />\r\n              <HomeInfo />\r\n              <HomeFeatures />\r\n              <HomePitches />\r\n              <HomeBottomSection />\r\n            </div>\r\n            </div>   \r\n        )\r\n        : (\r\n          <div></div>\r\n        )\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchResults: state.searchResults.data,\r\n  selectedBusiness: state.currentlySelectedBusiness\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchBusinesses,\r\n  selectBusiness\r\n})(Search);\r\n"]},"metadata":{},"sourceType":"module"}