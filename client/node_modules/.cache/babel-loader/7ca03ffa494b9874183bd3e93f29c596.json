{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\WidgetSystem\\\\WidgetAdditionList.js\";\nimport React, { useState } from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport { widgets } from \"./WidgetRegistry\";\n\nconst WidgetAdditionList = () => {\n  let widgetList = [];\n  widgets.forEach(widget => {\n    if (widget.name !== \"projection\") widgetList.push(widget.name);\n  });\n\n  const _useState = useState(widgetList),\n        _useState2 = _slicedToArray(_useState, 2),\n        availableWidgets = _useState2[0],\n        setAvailableWidgets = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Add A Widget\"), React.createElement(\"div\", {\n    className: \"widgetList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, availableWidgets.map(widgetName => {\n    return React.createElement(WidgetContainer, {\n      widgetName: widgetName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }) //WidgetContainer will render the correct widget based on widgetName\n    ;\n  })));\n};\n\nexport default WidgetAdditionList;","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/WidgetSystem/WidgetAdditionList.js"],"names":["React","useState","WidgetContainer","widgets","WidgetAdditionList","widgetList","forEach","widget","name","push","availableWidgets","setAvailableWidgets","map","widgetName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,MAAIC,UAAU,GAAG,EAAjB;AACAF,EAAAA,OAAO,CAACG,OAAR,CAAgBC,MAAM,IAAI;AACxB,QAAIA,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkCH,UAAU,CAACI,IAAX,CAAgBF,MAAM,CAACC,IAAvB;AACnC,GAFD;;AAF+B,oBAMiBP,QAAQ,CAACI,UAAD,CANzB;AAAA;AAAA,QAMxBK,gBANwB;AAAA,QAMNC,mBANM;;AAQ/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAIE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGD,gBAAgB,CAACE,GAAjB,CAAqBC,UAAU,IAAI;AAClC,WACE,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAC8C;AAD9C;AAGD,GAJA,CAFH,CAJF,CADF;AAeD,CAvBD;;AAyBA,eAAeT,kBAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport WidgetContainer from \"./WidgetContainer\";\r\n\r\nimport { widgets } from \"./WidgetRegistry\";\r\n\r\nconst WidgetAdditionList = () => {\r\n  let widgetList = [];\r\n  widgets.forEach(widget => {\r\n    if (widget.name !== \"projection\") widgetList.push(widget.name);\r\n  });\r\n\r\n  const [availableWidgets, setAvailableWidgets] = useState(widgetList);\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <h4>Add A Widget</h4>\r\n\r\n      <div className=\"widgetList\">\r\n        {/* Render Available Widgets */}\r\n        {availableWidgets.map(widgetName => {\r\n          return (\r\n            <WidgetContainer widgetName={widgetName} /> //WidgetContainer will render the correct widget based on widgetName\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WidgetAdditionList;\r\n"]},"metadata":{},"sourceType":"module"}