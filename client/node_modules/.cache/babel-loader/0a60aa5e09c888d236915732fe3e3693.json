{"ast":null,"code":"import _objectSpread from \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/login.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { shouldUpdateLoggedInUser } from \"../actions/index\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '10%',\n    marginBottom: '-3%'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '60%'\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(1),\n    marginTop: '30px',\n    marginBottom: '30px',\n    width: '12%',\n    backgroundColor: '#1E4DC7'\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nconst Login = props => {\n  const classes = useStyles();\n\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        login = _useState2[0],\n        setLogin = _useState2[1];\n\n  const handleChange = e => {\n    setLogin(_objectSpread({}, login, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    if (!props.isFetching) {\n      e.preventDefault();\n      console.log(login, \"login that was passed\");\n      axios.post(\"https://cors-anywhere.herokuapp.com/http://tallyai.us-east-1.elasticbeanstalk.com/api/auth/login\", login) //swap local host with https://tally-ai.herokuapp.com/api/auth/login\n      .then(res => {\n        console.log(\"Logged in successfully\", res);\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"userID\", res.data.id);\n        props.shouldUpdateLoggedInUser(true);\n        props.history.push('/dashboard');\n      }).catch(err => {\n        console.log(\"Error logging in\", err);\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (props.loggedInUser) {\n      props.history.push('/settings'); //change to account when made\n    }\n  }, [props.loggedInUser]);\n  return React.createElement(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      border: \"1px solid #E3F2FD\",\n      background: \"linear-gradient(341.24deg, #B5E4FE 11.16%, #BDF5FF 82.03%)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.container,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      height: \"60vh\",\n      width: \"40%\",\n      borderRadius: \"47px\",\n      backgroundColor: \"White\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      paddingTop: \"20px\",\n      fontSize: \"22px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Log In\")), React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"email\",\n    label: \"Email\",\n    type: \"email\",\n    className: classes.textField,\n    value: login.username,\n    onChange: handleChange,\n    required: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    className: classes.textField,\n    value: login.password,\n    onChange: handleChange,\n    required: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Button, {\n    style: {\n      marginTop: \"30px\",\n      backgroundColor: \"#1E4DC7;\",\n      color: \"white\",\n      width: \"40%\"\n    },\n    className: classes.button,\n    variant: \"outlined\",\n    color: \"black\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Login\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Need an account? \", React.createElement(Link, {\n    style: {\n      padding: \"0\",\n      color: \"black\"\n    },\n    to: \"/Register/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Register here\"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state.loggedInUser.userID,\n    isFetching: state.loggedInUser.isFetching,\n    error: state.loggedInUser.error\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shouldUpdateLoggedInUser\n})(Login);","map":{"version":3,"sources":["/Users/benkoehler/Desktop/Labs/tally-ai-fe/client/src/components/login.js"],"names":["React","useState","useEffect","Link","connect","shouldUpdateLoggedInUser","makeStyles","TextField","Button","axios","useStyles","theme","container","display","flexWrap","flexDirection","alignItems","marginTop","marginBottom","textField","marginLeft","spacing","marginRight","width","dense","button","margin","backgroundColor","input","Login","props","classes","email","password","login","setLogin","handleChange","e","target","name","value","handleSubmit","isFetching","preventDefault","console","log","post","then","res","localStorage","setItem","data","token","id","history","push","catch","err","loggedInUser","minHeight","border","background","height","borderRadius","paddingTop","fontSize","username","color","padding","mapStateToProps","state","userID","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { shouldUpdateLoggedInUser } from \"../actions/index\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: '10%',\n        marginBottom: '-3%'\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '60%'\n    },\n    dense: {\n        marginTop: theme.spacing(2),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginTop: '30px',\n        marginBottom: '30px',\n        width: '12%',\n        backgroundColor: '#1E4DC7'\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nconst Login = props => {\n\n    const classes = useStyles();\n    const [login, setLogin] = useState({ email: \"\", password: \"\" })\n\n    const handleChange = e => {\n        setLogin({ ...login, [e.target.name]: e.target.value })\n    }\n\n    const handleSubmit = e => {\n        if (!props.isFetching) {\n            e.preventDefault();\n            console.log(login, \"login that was passed\")\n\n            axios\n                .post(\"https://cors-anywhere.herokuapp.com/http://tallyai.us-east-1.elasticbeanstalk.com/api/auth/login\", login) //swap local host with https://tally-ai.herokuapp.com/api/auth/login\n                .then(res => {\n                    console.log(\"Logged in successfully\", res);\n                    localStorage.setItem(\"token\", res.data.token);\n                    localStorage.setItem(\"userID\", res.data.id);\n                    props.shouldUpdateLoggedInUser(true);\n                    props.history.push('/dashboard')\n                })\n                .catch(err => {\n                    console.log(\"Error logging in\", err);\n                })\n\n        }\n    }\n\n    useEffect(() => {\n        if (props.loggedInUser) {\n            props.history.push('/settings')  //change to account when made\n        }\n    }, [props.loggedInUser]);\n\n    return (\n        <div style={{ minHeight: \"100vh\", border: \"1px solid #E3F2FD\", background: \"linear-gradient(341.24deg, #B5E4FE 11.16%, #BDF5FF 82.03%)\" }}>\n            <form className={classes.container} onSubmit={handleSubmit}>\n                <div style={{ height: \"60vh\", width: \"40%\", borderRadius: \"47px\", backgroundColor: \"White\" }}>\n                    <div style={{ paddingTop: \"20px\", fontSize: \"22px\" }}>\n                        <h1>Log In</h1>\n                    </div>\n                    <div style={{ width: \"100%\" }}>\n                        <TextField\n                            name=\"email\"\n                            label=\"Email\"\n                            type=\"email\"\n                            className={classes.textField}\n                            value={login.username}\n                            onChange={handleChange}\n                            required\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            placeholder=\"Email\"\n                        />\n                    </div>\n                    <div style={{ width: \"100%\" }}>\n                        <TextField\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            className={classes.textField}\n                            value={login.password}\n                            onChange={handleChange}\n                            required\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            placeholder=\"Password\"\n                        />\n                    </div>\n                    <Button style={{ marginTop: \"30px\", backgroundColor: \"#1E4DC7;\", color: \"white\", width: \"40%\" }} className={classes.button} variant=\"outlined\" color=\"black\" type=\"submit\">Login</Button>\n                    <div>\n                        <p>\n                            Need an account? <Link style={{padding: \"0\", color: \"black\"}} to='/Register/'>Register here</Link>\n                        </p>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedInUser: state.loggedInUser.userID,\n        isFetching: state.loggedInUser.isFetching,\n        error: state.loggedInUser.error\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    { shouldUpdateLoggedInUser }\n)(Login)\n"]},"metadata":{},"sourceType":"module"}