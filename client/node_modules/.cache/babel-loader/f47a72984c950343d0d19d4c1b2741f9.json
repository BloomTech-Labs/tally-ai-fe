{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\WidgetSystem\\\\Widgets\\\\ReviewFrequency.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Line, ResponsiveContainer } from \"recharts\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport data from \"../../../dummyData/dummyReviewsOverTime\";\nconst exampleData = [{\n  date: \"2017-8-31\",\n  reviews: 5\n}, {\n  date: \"2017-9-30\",\n  reviews: 7\n}, {\n  date: \"2017-10-31\",\n  reviews: 4\n}, {\n  date: \"2017-11-30\",\n  reviews: 5\n}, {\n  date: \"2018-1-31\",\n  reviews: 4\n}, {\n  date: \"2018-2-28\",\n  reviews: 1\n}, {\n  date: \"2018-3-31\",\n  reviews: 3\n}, {\n  date: \"2018-4-30\",\n  reviews: 1\n}, {\n  date: \"2018-5-31\",\n  reviews: 2\n}, {\n  date: \"2018-6-30\",\n  reviews: 1\n}, {\n  date: \"2018-8-31\",\n  reviews: 3\n}, {\n  date: \"2018-10-31\",\n  reviews: 1\n}];\n\nconst ReviewsOverTime = props => {\n  console.log(`\\nData in ReviewsOverTime\\n${props.data}\\n`); // Conditionally render\n\n  if (props.isFetching || props.data === null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n  if (props.error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Error!\");\n  }\n\n  return React.createElement(\"div\", {\n    className: \"widget\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"widgetTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Review Frequency\"), React.createElement(\"p\", {\n    className: \"widgetSubtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"View the frequency in reviews over time to keep track if promotional efforts are working!\"), React.createElement(\"div\", {\n    className: \"graphContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(ResponsiveContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(LineChart, {\n    data: props.data,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(XAxis, {\n    dataKey: \"date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(YAxis, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Legend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Line, {\n    type: \"monotone\",\n    dataKey: \"reviews\",\n    stroke: \"#8884d8\",\n    activeDot: {\n      r: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))));\n};\n\nconst mapStateToProps = state => ({\n  data: state.widgetData.reviewsOverTime.data,\n  isFetching: state.widgetData.reviewsOverTime.isFetching,\n  error: state.widgetData.reviewsOverTime.error\n});\n\nexport default connect(mapStateToProps)(ReviewsOverTime);","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/WidgetSystem/Widgets/ReviewFrequency.js"],"names":["React","connect","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Line","ResponsiveContainer","CircularProgress","data","exampleData","date","reviews","ReviewsOverTime","props","console","log","isFetching","error","top","right","left","bottom","r","mapStateToProps","state","widgetData","reviewsOverTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,mBARF,QASO,UATP;AAUA,OAAOC,gBAAP,MAA6B,oCAA7B;AAEA,OAAOC,IAAP,MAAiB,yCAAjB;AAEA,MAAMC,WAAW,GAAG,CAClB;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CADkB,EAElB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAFkB,EAGlB;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,OAAO,EAAE;AAA/B,CAHkB,EAIlB;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,OAAO,EAAE;AAA/B,CAJkB,EAKlB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CALkB,EAMlB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CANkB,EAOlB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAPkB,EAQlB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CARkB,EASlB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CATkB,EAUlB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAVkB,EAWlB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAXkB,EAYlB;AAAED,EAAAA,IAAI,EAAE,YAAR;AAAsBC,EAAAA,OAAO,EAAE;AAA/B,CAZkB,CAApB;;AAeA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6BF,KAAK,CAACL,IAAK,IAArD,EAF+B,CAI/B;;AACA,MAAIK,KAAK,CAACG,UAAN,IAAoBH,KAAK,CAACL,IAAN,KAAe,IAAvC,EAA6C;AAC3C,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL,CAAP;AACD;;AACD,MAAIK,KAAK,CAACI,KAAV,EAAiB;AACf,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iGAFF,EAGE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEJ,KAAK,CAACL,IADd;AAEE,IAAA,MAAM,EAAE;AACNU,MAAAA,GAAG,EAAE,CADC;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,MAAM,EAAE;AAJF,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,aAAD;AAAe,IAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,SAAS,EAAE;AAAEC,MAAAA,CAAC,EAAE;AAAL,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF,CADE,CAHF,CADF;AA+BD,CA3CD;;AA6CA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChChB,EAAAA,IAAI,EAAEgB,KAAK,CAACC,UAAN,CAAiBC,eAAjB,CAAiClB,IADP;AAEhCQ,EAAAA,UAAU,EAAEQ,KAAK,CAACC,UAAN,CAAiBC,eAAjB,CAAiCV,UAFb;AAGhCC,EAAAA,KAAK,EAAEO,KAAK,CAACC,UAAN,CAAiBC,eAAjB,CAAiCT;AAHR,CAAL,CAA7B;;AAMA,eAAenB,OAAO,CAACyB,eAAD,CAAP,CAAyBX,eAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  LineChart,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  Line,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport data from \"../../../dummyData/dummyReviewsOverTime\";\r\n\r\nconst exampleData = [\r\n  { date: \"2017-8-31\", reviews: 5 },\r\n  { date: \"2017-9-30\", reviews: 7 },\r\n  { date: \"2017-10-31\", reviews: 4 },\r\n  { date: \"2017-11-30\", reviews: 5 },\r\n  { date: \"2018-1-31\", reviews: 4 },\r\n  { date: \"2018-2-28\", reviews: 1 },\r\n  { date: \"2018-3-31\", reviews: 3 },\r\n  { date: \"2018-4-30\", reviews: 1 },\r\n  { date: \"2018-5-31\", reviews: 2 },\r\n  { date: \"2018-6-30\", reviews: 1 },\r\n  { date: \"2018-8-31\", reviews: 3 },\r\n  { date: \"2018-10-31\", reviews: 1 }\r\n];\r\n\r\nconst ReviewsOverTime = props => {\r\n\r\n  console.log(`\\nData in ReviewsOverTime\\n${props.data}\\n`);\r\n\r\n  // Conditionally render\r\n  if (props.isFetching || props.data === null) {\r\n    return <div><CircularProgress>Loading...</CircularProgress></div>;\r\n  }\r\n  if (props.error) {\r\n    return <div>Error!</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <h3 className=\"widgetTitle\">Review Frequency</h3>\r\n      <p className=\"widgetSubtitle\">View the frequency in reviews over time to keep track if promotional efforts are working!</p>\r\n      <div className=\"graphContainer\">\r\n    <ResponsiveContainer>\r\n      <LineChart\r\n        data={props.data}\r\n        margin={{\r\n          top: 5,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"reviews\"\r\n          stroke=\"#8884d8\"\r\n          activeDot={{ r: 8 }}\r\n        />\r\n      </LineChart>\r\n      </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.widgetData.reviewsOverTime.data,\r\n  isFetching: state.widgetData.reviewsOverTime.isFetching,\r\n  error: state.widgetData.reviewsOverTime.error\r\n});\r\n\r\nexport default connect(mapStateToProps)(ReviewsOverTime);\r\n"]},"metadata":{},"sourceType":"module"}