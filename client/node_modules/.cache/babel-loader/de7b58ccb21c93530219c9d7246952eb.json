{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Raudel Flores\\\\Documents\\\\Lambda-School\\\\LABS\\\\tally\\\\tally-ai-fe\\\\client\\\\src\\\\components\\\\registration.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { shouldUpdateLoggedInUser } from \"../actions/index\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: '7%'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '40%'\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    marginTop: \"30px\",\n    backgroundColor: \"#1E4DC7\",\n    color: \"white\",\n    margin: theme.spacing(1),\n    marginBottom: '30px',\n    width: '15%'\n  },\n  input: {\n    display: 'none'\n  }\n}));\n\nfunction Registration(props) {\n  const classes = useStyles();\n\n  const _useState = useState({\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    confirmedEmail: \"\",\n    password: \"\",\n    confirmedPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1]; // useEffect(() => {\n  //     if (props.loggedInUser) {//we're logged in, lets redirect to /home\n  //         props.history.push('/')\n  //     }\n  // }, [props.loggedInUser]);\n\n\n  const submitHandler = event => {\n    console.log(\"onSubmit working\", props.isFetching);\n    event.preventDefault();\n\n    if (!(userCredentials.confirmedEmail === userCredentials.email)) {\n      alert(\"Your confirmed email does not match.\");\n      return;\n    }\n\n    if (!(userCredentials.password === userCredentials.confirmedPassword)) {\n      alert(\"Your confirmed password does not match.\");\n      return;\n    }\n\n    if (!props.isFetching) {\n      //don't let them submit again if the backend is already processing their registration request\n      console.log(userCredentials);\n      let formattedUserCredentials = userCredentials;\n      delete formattedUserCredentials.confirmedEmail;\n      delete formattedUserCredentials.confirmedPassword;\n      axios.post(`https://cors-anywhere.herokuapp.com/http://tallyai.us-east-1.elasticbeanstalk.com/api/auth/register`, formattedUserCredentials).then(res => {\n        console.log(\"Registered successfully\", res);\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"userID\", res.data.userN.id);\n        props.shouldUpdateLoggedInUser(true);\n        props.history.push('/search/business');\n      }).catch(err => {\n        console.log(\"Error registering\", err);\n      });\n    }\n  };\n\n  const changeHandler = event => {\n    setCredentials(_objectSpread({}, userCredentials, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      background: \"linear-gradient(341.24deg, #B5E4FE 11.16%, #BDF5FF 82.03%)\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.container,\n    onSubmit: e => submitHandler(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"80%\",\n      marginLeft: \"10%\",\n      marginRight: \"10%\",\n      borderRadius: \"47px\",\n      marginTop: \"50px\",\n      marginBottom: \"50px\",\n      height: \"70vh\",\n      background: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"91%\",\n      marginLeft: \"9%\",\n      textAlign: \"left\",\n      fontSize: \"24px\",\n      paddingTop: \"25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Sign up for an account\")), React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"First Name\",\n    type: \"text\",\n    name: \"first_name\",\n    className: classes.textField,\n    value: userCredentials.first_name,\n    onChange: changeHandler,\n    placeholder: \"First Name\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Last Name\",\n    type: \"text\",\n    name: \"last_name\",\n    className: classes.textField,\n    value: userCredentials.last_name,\n    onChange: changeHandler,\n    placeholder: \"Last Name\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      paddingTop: \"25px\",\n      paddingBottom: \"25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Email\",\n    type: \"email\",\n    name: \"email\",\n    className: classes.textField,\n    value: userCredentials.email,\n    onChange: changeHandler,\n    placeholder: \"Email\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    label: \"Confirm Email\",\n    type: \"email\",\n    name: \"confirmedEmail\",\n    className: classes.textField,\n    value: userCredentials.confirmedEmail,\n    onChange: changeHandler,\n    placeholder: \"Email\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      paddingBottom: \"25px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    type: \"password\",\n    name: \"password\",\n    className: classes.textField,\n    value: userCredentials.password,\n    onChange: changeHandler,\n    placeholder: \"Password\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    type: \"password\",\n    name: \"confirmedPassword\",\n    className: classes.textField,\n    value: userCredentials.confirmedPassword,\n    onChange: changeHandler,\n    placeholder: \"Confirm Password\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.button,\n    variant: \"outlined\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, \"Register\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Already have an account? \", React.createElement(Link, {\n    style: {\n      padding: \"0\",\n      color: \"black\"\n    },\n    to: \"/Login/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Sign in here\"))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    isFetching: state.loggedInUser.isFetching,\n    error: state.loggedInUser.error,\n    loggedInUser: state.loggedInUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  shouldUpdateLoggedInUser\n})(Registration);","map":{"version":3,"sources":["C:/Users/Raudel Flores/Documents/Lambda-School/LABS/tally/tally-ai-fe/client/src/components/registration.js"],"names":["React","useState","useEffect","connect","shouldUpdateLoggedInUser","makeStyles","TextField","Button","Link","axios","useStyles","theme","container","display","flexWrap","flexDirection","alignItems","paddingTop","textField","marginLeft","spacing","marginRight","width","dense","marginTop","button","backgroundColor","color","margin","marginBottom","input","Registration","props","classes","first_name","last_name","email","confirmedEmail","password","confirmedPassword","userCredentials","setCredentials","submitHandler","event","console","log","isFetching","preventDefault","alert","formattedUserCredentials","post","then","res","localStorage","setItem","data","token","userN","id","history","push","catch","err","changeHandler","target","name","value","background","height","e","borderRadius","textAlign","fontSize","paddingBottom","padding","mapStateToProps","state","loggedInUser","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { shouldUpdateLoggedInUser } from \"../actions/index\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport axios from \"axios\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        paddingTop: '7%'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '40%'\r\n    },\r\n    dense: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginTop: \"30px\", \r\n        backgroundColor: \"#1E4DC7\", \r\n        color: \"white\",\r\n        margin: theme.spacing(1),\r\n        marginBottom: '30px',\r\n        width: '15%'\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nfunction Registration(props) {\r\n    const classes = useStyles();\r\n    const [userCredentials, setCredentials] = useState({\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        email: \"\",\r\n        confirmedEmail: \"\",\r\n        password: \"\",\r\n        confirmedPassword: \"\"\r\n    });\r\n\r\n    // useEffect(() => {\r\n    //     if (props.loggedInUser) {//we're logged in, lets redirect to /home\r\n    //         props.history.push('/')\r\n    //     }\r\n    // }, [props.loggedInUser]);\r\n\r\n    const submitHandler = event => {\r\n        console.log(\"onSubmit working\", props.isFetching);\r\n        event.preventDefault();\r\n\r\n        if(!(userCredentials.confirmedEmail === userCredentials.email)){\r\n            alert(\"Your confirmed email does not match.\");\r\n            return;\r\n        }\r\n\r\n        if(!(userCredentials.password === userCredentials.confirmedPassword)){\r\n            alert(\"Your confirmed password does not match.\");\r\n            return;\r\n        }\r\n\r\n        if (!props.isFetching) {//don't let them submit again if the backend is already processing their registration request\r\n            console.log(userCredentials);\r\n\r\n            let formattedUserCredentials = userCredentials;\r\n            delete formattedUserCredentials.confirmedEmail;\r\n            delete formattedUserCredentials.confirmedPassword;\r\n\r\n            axios\r\n                .post(`https://cors-anywhere.herokuapp.com/http://tallyai.us-east-1.elasticbeanstalk.com/api/auth/register`, formattedUserCredentials)\r\n                .then(\r\n                    res => {\r\n                        console.log(\"Registered successfully\", res);\r\n                        localStorage.setItem(\"token\", res.data.token);\r\n                        localStorage.setItem(\"userID\", res.data.userN.id);\r\n                        props.shouldUpdateLoggedInUser(true);\r\n                        props.history.push('/search/business');\r\n                    }\r\n                )\r\n                .catch(err => {\r\n                    console.log(\"Error registering\", err);\r\n                }\r\n                );\r\n        }\r\n    }\r\n\r\n    const changeHandler = event => {\r\n        setCredentials({ ...userCredentials, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    return (\r\n        <div style={{background: \"linear-gradient(341.24deg, #B5E4FE 11.16%, #BDF5FF 82.03%)\", height:\"100vh\" }}>\r\n            <form className={classes.container} onSubmit={(e) => submitHandler(e)}>\r\n                <div style={{ width: \"80%\", marginLeft: \"10%\", marginRight: \"10%\", borderRadius: \"47px\", marginTop: \"50px\", marginBottom: \"50px\", height: \"70vh\", background: \"white\" }}>\r\n                    <div style={{ width: \"91%\", marginLeft: \"9%\", textAlign: \"left\", fontSize: \"24px\", paddingTop: \"25px\" }}>\r\n                        <h1>Sign up for an account</h1>\r\n                    </div>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <TextField\r\n                            label=\"First Name\"\r\n                            type=\"text\"\r\n                            name=\"first_name\"\r\n                            className={classes.textField}\r\n                            value={userCredentials.first_name}\r\n                            onChange={changeHandler}\r\n                            placeholder=\"First Name\"\r\n                            required\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Last Name\"\r\n                            type=\"text\"\r\n                            name=\"last_name\"\r\n                            className={classes.textField}\r\n                            value={userCredentials.last_name}\r\n                            onChange={changeHandler}\r\n                            placeholder=\"Last Name\"\r\n                            required\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\", paddingTop: \"25px\", paddingBottom: \"25px\" }}>\r\n                        <TextField\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className={classes.textField}\r\n                            value={userCredentials.email}\r\n                            onChange={changeHandler}\r\n                            placeholder=\"Email\"\r\n                            required\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Confirm Email\"\r\n                            type=\"email\"\r\n                            name=\"confirmedEmail\"\r\n                            className={classes.textField}\r\n                            value={userCredentials.confirmedEmail}\r\n                            onChange={changeHandler}\r\n                            placeholder=\"Email\"\r\n                            required\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\", paddingBottom: \"25px\" }}>\r\n                        <TextField\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className={classes.textField}\r\n                            value={userCredentials.password}\r\n                            onChange={changeHandler}\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n\r\n                        />\r\n                        <TextField\r\n                            type=\"password\"\r\n                            name=\"confirmedPassword\"\r\n                            className={classes.textField}\r\n                            value={userCredentials.confirmedPassword}\r\n                            onChange={changeHandler}\r\n                            placeholder=\"Confirm Password\"\r\n                            required\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n\r\n                        />\r\n                    </div>\r\n                    <div style={{ width: \"100%\" }}>\r\n                        <Button className={classes.button} variant=\"outlined\" type=\"submit\">Register</Button>\r\n                    </div>\r\n                    <div>\r\n                        <p>\r\n                            Already have an account? <Link style={{padding: \"0\", color: \"black\"}} to='/Login/'>Sign in here</Link>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isFetching: state.loggedInUser.isFetching,\r\n        error: state.loggedInUser.error,\r\n        loggedInUser: state.loggedInUser\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { shouldUpdateLoggedInUser }\r\n)(Registration)\r\n\r\n"]},"metadata":{},"sourceType":"module"}